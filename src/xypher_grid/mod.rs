// This file is auto-generated by xg.py. Do not edit manually.
//! # XypherGrid Module
//! 
//! This module provides precomputed lookup tables for various Error Correction Code (ECC) algorithms.
//! These tables are generated by the xg.py script and are used to accelerate the encoding and decoding
//! operations of ECC algorithms.
//!
//! The module also includes functions for initializing and accessing these tables, as well as
//! utility functions for working with the precomputed data.

use std::collections::HashMap;
use std::sync::OnceLock;
use crate::error::{Error, Result};

/// Static storage for precomputed tables
static TABLES: OnceLock<HashMap<String, Vec<u8>>> = OnceLock::new();

/// Initialize precomputed tables
pub fn initialize_tables() -> &'static HashMap<String, Vec<u8>> {
    TABLES.get_or_init(|| {
        // Create and populate tables
        let mut tables = HashMap::new();
        
        // Add tables from the auto-generated code below
        add_precomputed_tables(&mut tables);
        
        tables
    })
}

/// Gets a precomputed table by name
pub fn get_table(name: &str) -> Result<Vec<u8>> {
    initialize_tables()
        .get(name)
        .cloned()
        .ok_or_else(|| Error::LookupTable(format!("Table '{}' not found", name)))
}

/// Helper function to get tables with formatted names
fn get_formatted_table(prefix: &str, params: &[usize]) -> Result<Vec<u8>> {
    let name = format!("{}{}", prefix, params.iter().map(|p| format!("_{}", p)).collect::<String>());
    get_table(&name)
}

/// Gets a BCH generator table for the given parameters
pub fn get_bch_generator(n: usize, k: usize, t: usize) -> Result<Vec<u8>> {
    get_formatted_table("gen", &[n, k, t])
}

/// Gets a RS generator table for the given parameters
pub fn get_rs_generator(n: usize, k: usize) -> Result<Vec<u8>> {
    get_formatted_table("gen", &[n, k])
}

/// Gets a Galois field table for the given field size
pub fn get_galois_table(field_size: usize, table_type: &str) -> Result<Vec<u8>> {
    get_table(&format!("galois_{}_{}", table_type, field_size))
}

/// Gets a Hamming code table for the given parameters
pub fn get_hamming_table(r: usize) -> Result<Vec<u8>> {
    get_formatted_table("hamming", &[r])
}

/// Initialize all precomputed tables
pub fn initialize() -> Result<()> {
    // Just access the tables to ensure they're initialized
    let _ = initialize_tables();
    Ok(())
}

/// Struct that holds precomputed tables for various ECC algorithms
/// This exists for backward compatibility with existing code
#[derive(Debug)]
pub struct XypherGrid;

impl XypherGrid {
    /// Creates a new XypherGrid instance
    pub fn new() -> Self {
        Self
    }

    /// Initializes precomputed tables for all supported ECC algorithms
    pub fn initialize_precomputed_tables(&self) -> Result<()> {
        initialize()
    }

    /// Gets a precomputed table by name
    pub fn get_table(&self, name: &str) -> Result<Vec<u8>> {
        get_table(name)
    }

    /// Gets a BCH generator table for the given parameters
    pub fn get_bch_generator(&self, n: usize, k: usize, t: usize) -> Result<Vec<u8>> {
        get_bch_generator(n, k, t)
    }

    /// Gets a RS generator table for the given parameters
    pub fn get_rs_generator(&self, n: usize, k: usize) -> Result<Vec<u8>> {
        get_rs_generator(n, k)
    }

    /// Gets a Galois field table for the given field size
    pub fn get_galois_table(&self, field_size: usize, table_type: &str) -> Result<Vec<u8>> {
        get_galois_table(field_size, table_type)
    }

    /// Gets a Hamming code table for the given parameters
    pub fn get_hamming_table(&self, r: usize) -> Result<Vec<u8>> {
        get_hamming_table(r)
    }
}

/// Global instance for convenience
/// This is a static accessor for backward compatibility
pub fn get_xypher_grid() -> &'static XypherGrid {
    static INSTANCE: OnceLock<XypherGrid> = OnceLock::new();
    INSTANCE.get_or_init(XypherGrid::new)
}

// ----------------------------------------------------------------------------
// Auto-generated code below
// ----------------------------------------------------------------------------

/// Internal function to add precomputed tables to the HashMap
/// This function is auto-generated by xg.py
fn add_precomputed_tables(tables: &mut HashMap<String, Vec<u8>>) {
    /// Types of tables (kept for reference)
    #[allow(dead_code)]
    enum TableType {
        Generator,
        Parity,
        Syndrome,
        LookupTable,
        EncodingMatrix,
        DecodingMatrix,
        BchGenerators,
        BchMinimalPolynomials,
        BchSyndromes,
        ReedSolomonGenerators,
        ReedSolomonSyndromes,
        GaloisExp,
        GaloisLog,
        GaloisField,
        HammingParityCheck,
        HammingSyndromes,
        HammingMatrix,
        ReedMullerGenerators,
        ReedMullerHadamard,
        ConvolutionalTrellis,
        ConvolutionalLattice,
        TurboInterleavers,
        TurboTrellis,
        FountainDegrees,
        FountainDroplets,
        LDPC,
        LdpcMatrix,
        Polar,
        PolarFactorGraph,
        Custom,
    }

    /// Types of algorithms (kept for reference)
    #[allow(dead_code)]
    enum AlgorithmType {
        ReedSolomon,
        BCH,
        Hamming,
        ReedMuller,
        Turbo,
        Convolutional,
        Fountain,
        LDPC,
        Polar,
    }

    // Table exp (1024 bytes)
    let exp_data = include_bytes!("tables/exp.bin");
    tables.insert("exp".to_string(), exp_data.to_vec());

    // Table log (512 bytes)
    let log_data = include_bytes!("tables/log.bin");
    tables.insert("log".to_string(), log_data.to_vec());

    // Table gen_7_1 (14 bytes)
    let gen_7_1_data: [u8; 14] = [
        0x01, 0x00, 0x7e, 0x00, 0x04, 0x00, 0x9e, 0x00, 0x3a, 0x00, 0x31, 0x00, 0x75, 0x00
    ];
    tables.insert("gen_7_1".to_string(), gen_7_1_data.to_vec());

    // Table gen_7_3 (10 bytes)
    let gen_7_3_data: [u8; 10] = [
        0x01, 0x00, 0x1e, 0x00, 0xd8, 0x00, 0xe7, 0x00, 0x74, 0x00
    ];
    tables.insert("gen_7_3".to_string(), gen_7_3_data.to_vec());

    // Table gen_7_5 (6 bytes)
    let gen_7_5_data: [u8; 6] = [
        0x01, 0x00, 0x06, 0x00, 0x08, 0x00
    ];
    tables.insert("gen_7_5".to_string(), gen_7_5_data.to_vec());

    // Table gen_15_1 (30 bytes)
    let gen_15_1_data: [u8; 30] = [
        0x01, 0x00, 0x1c, 0x00, 0xd8, 0x00, 0xb7, 0x00, 0x14, 0x00, 0x64, 0x00, 0x2e, 0x00, 0x24, 0x00, 0x4d, 0x00, 0x24, 0x00, 0xaf, 0x00, 0x2b, 0x00, 0xbc, 0x00, 0x9c, 0x00, 0x1a, 0x00
    ];
    tables.insert("gen_15_1".to_string(), gen_15_1_data.to_vec());

    // Table gen_15_3 (26 bytes)
    let gen_15_3_data: [u8; 26] = [
        0x01, 0x00, 0x88, 0x00, 0xc1, 0x00, 0x22, 0x00, 0x33, 0x00, 0x82, 0x00, 0x93, 0x00, 0xa7, 0x00, 0xaa, 0x00, 0x84, 0x00, 0xaf, 0x00, 0xfc, 0x00, 0x78, 0x00
    ];
    tables.insert("gen_15_3".to_string(), gen_15_3_data.to_vec());

    // Table gen_15_5 (22 bytes)
    let gen_15_5_data: [u8; 22] = [
        0x01, 0x00, 0xad, 0x00, 0x2f, 0x00, 0x8c, 0x00, 0xbe, 0x00, 0xc5, 0x00, 0x1e, 0x00, 0xbc, 0x00, 0x44, 0x00, 0xd4, 0x00, 0xa0, 0x00
    ];
    tables.insert("gen_15_5".to_string(), gen_15_5_data.to_vec());

    // Table gen_15_7 (18 bytes)
    let gen_15_7_data: [u8; 18] = [
        0x01, 0x00, 0xe3, 0x00, 0x2c, 0x00, 0xb2, 0x00, 0x47, 0x00, 0xac, 0x00, 0x08, 0x00, 0xe0, 0x00, 0x25, 0x00
    ];
    tables.insert("gen_15_7".to_string(), gen_15_7_data.to_vec());

    // Table gen_15_9 (14 bytes)
    let gen_15_9_data: [u8; 14] = [
        0x01, 0x00, 0x7e, 0x00, 0x04, 0x00, 0x9e, 0x00, 0x3a, 0x00, 0x31, 0x00, 0x75, 0x00
    ];
    tables.insert("gen_15_9".to_string(), gen_15_9_data.to_vec());

    // Table gen_15_11 (10 bytes)
    let gen_15_11_data: [u8; 10] = [
        0x01, 0x00, 0x1e, 0x00, 0xd8, 0x00, 0xe7, 0x00, 0x74, 0x00
    ];
    tables.insert("gen_15_11".to_string(), gen_15_11_data.to_vec());

    // Table gen_15_13 (6 bytes)
    let gen_15_13_data: [u8; 6] = [
        0x01, 0x00, 0x06, 0x00, 0x08, 0x00
    ];
    tables.insert("gen_15_13".to_string(), gen_15_13_data.to_vec());

    // Table gen_31_1 (62 bytes)
    let gen_31_1_data: [u8; 62] = [
        0x01, 0x00, 0xb5, 0x00, 0xff, 0x00, 0x52, 0x00, 0xe4, 0x00, 0x45, 0x00, 0x4a, 0x00, 0x6e, 0x00, 0xae, 0x00, 0xd2, 0x00, 0x69, 0x00, 0x76, 0x00, 0x43, 0x00, 0xad, 0x00, 0x67, 0x00, 0x8b, 0x00, 0x15, 0x00, 0xd2, 0x00, 0x41, 0x00, 0xe9, 0x00, 0xf2, 0x00, 0xe9, 0x00, 0x49, 0x00, 0x4b, 0x00, 0x6f, 0x00, 0x75, 0x00, 0xb0, 0x00, 0x74, 0x00, 0x99, 0x00, 0x45, 0x00, 0x59, 0x00
    ];
    tables.insert("gen_31_1".to_string(), gen_31_1_data.to_vec());

    // Table gen_31_3 (58 bytes)
    let gen_31_3_data: [u8; 58] = [
        0x01, 0x00, 0xe5, 0x00, 0x24, 0x00, 0xe0, 0x00, 0xd0, 0x00, 0x7a, 0x00, 0x2c, 0x00, 0x7c, 0x00, 0xa5, 0x00, 0x93, 0x00, 0x1c, 0x00, 0x53, 0x00, 0x73, 0x00, 0x2b, 0x00, 0xd4, 0x00, 0x83, 0x00, 0x9b, 0x00, 0x94, 0x00, 0x6f, 0x00, 0x3a, 0x00, 0x68, 0x00, 0xa1, 0x00, 0x9b, 0x00, 0xeb, 0x00, 0x54, 0x00, 0xcd, 0x00, 0xa1, 0x00, 0x25, 0x00, 0xaa, 0x00
    ];
    tables.insert("gen_31_3".to_string(), gen_31_3_data.to_vec());

    // Table gen_31_5 (54 bytes)
    let gen_31_5_data: [u8; 54] = [
        0x01, 0x00, 0xf1, 0x00, 0xcc, 0x00, 0xd1, 0x00, 0x40, 0x00, 0xd0, 0x00, 0xa5, 0x00, 0x33, 0x00, 0x03, 0x00, 0x39, 0x00, 0xb2, 0x00, 0xec, 0x00, 0x6a, 0x00, 0xab, 0x00, 0xc2, 0x00, 0xe3, 0x00, 0x4a, 0x00, 0x80, 0x00, 0xe6, 0x00, 0x9d, 0x00, 0xec, 0x00, 0x2f, 0x00, 0x36, 0x00, 0xe3, 0x00, 0xe5, 0x00, 0x7d, 0x00, 0xd9, 0x00
    ];
    tables.insert("gen_31_5".to_string(), gen_31_5_data.to_vec());

    // Table gen_31_7 (50 bytes)
    let gen_31_7_data: [u8; 50] = [
        0x01, 0x00, 0xf4, 0x00, 0xc5, 0x00, 0x21, 0x00, 0x14, 0x00, 0xc3, 0x00, 0xc5, 0x00, 0x08, 0x00, 0xda, 0x00, 0xfc, 0x00, 0xae, 0x00, 0x96, 0x00, 0xc6, 0x00, 0xa7, 0x00, 0x2c, 0x00, 0x7d, 0x00, 0xfb, 0x00, 0x85, 0x00, 0x2d, 0x00, 0x4f, 0x00, 0xad, 0x00, 0xd0, 0x00, 0xc7, 0x00, 0x6c, 0x00, 0xc1, 0x00
    ];
    tables.insert("gen_31_7".to_string(), gen_31_7_data.to_vec());

    // Table gen_31_9 (46 bytes)
    let gen_31_9_data: [u8; 46] = [
        0x01, 0x00, 0xb2, 0x00, 0xf6, 0x00, 0x6c, 0x00, 0xcf, 0x00, 0x43, 0x00, 0xcb, 0x00, 0x75, 0x00, 0xed, 0x00, 0xf4, 0x00, 0xa1, 0x00, 0xb2, 0x00, 0xb1, 0x00, 0x75, 0x00, 0x6e, 0x00, 0x1f, 0x00, 0xd9, 0x00, 0xcb, 0x00, 0x49, 0x00, 0x4b, 0x00, 0x33, 0x00, 0x6e, 0x00, 0x47, 0x00
    ];
    tables.insert("gen_31_9".to_string(), gen_31_9_data.to_vec());

    // Table gen_31_11 (42 bytes)
    let gen_31_11_data: [u8; 42] = [
        0x01, 0x00, 0x2d, 0x00, 0xde, 0x00, 0xd3, 0x00, 0x50, 0x00, 0x61, 0x00, 0xe5, 0x00, 0x27, 0x00, 0x64, 0x00, 0xb2, 0x00, 0xae, 0x00, 0xf7, 0x00, 0x8b, 0x00, 0xd9, 0x00, 0x47, 0x00, 0xb3, 0x00, 0x96, 0x00, 0x7a, 0x00, 0xf4, 0x00, 0xa6, 0x00, 0x59, 0x00
    ];
    tables.insert("gen_31_11".to_string(), gen_31_11_data.to_vec());

    // Table gen_31_13 (38 bytes)
    let gen_31_13_data: [u8; 38] = [
        0x01, 0x00, 0xc3, 0x00, 0xcb, 0x00, 0xd1, 0x00, 0x43, 0x00, 0x57, 0x00, 0x88, 0x00, 0x33, 0x00, 0xab, 0x00, 0xfe, 0x00, 0x8d, 0x00, 0x63, 0x00, 0xe6, 0x00, 0x74, 0x00, 0x19, 0x00, 0xb4, 0x00, 0x3e, 0x00, 0x1f, 0x00, 0xb3, 0x00
    ];
    tables.insert("gen_31_13".to_string(), gen_31_13_data.to_vec());

    // Table gen_31_15 (34 bytes)
    let gen_31_15_data: [u8; 34] = [
        0x01, 0x00, 0x76, 0x00, 0x34, 0x00, 0x67, 0x00, 0x1f, 0x00, 0x68, 0x00, 0x7e, 0x00, 0xbb, 0x00, 0xe8, 0x00, 0x11, 0x00, 0x38, 0x00, 0xb7, 0x00, 0x31, 0x00, 0x64, 0x00, 0x51, 0x00, 0x2c, 0x00, 0x4f, 0x00
    ];
    tables.insert("gen_31_15".to_string(), gen_31_15_data.to_vec());

    // Table gen_31_17 (30 bytes)
    let gen_31_17_data: [u8; 30] = [
        0x01, 0x00, 0x1c, 0x00, 0xd8, 0x00, 0xb7, 0x00, 0x14, 0x00, 0x64, 0x00, 0x2e, 0x00, 0x24, 0x00, 0x4d, 0x00, 0x24, 0x00, 0xaf, 0x00, 0x2b, 0x00, 0xbc, 0x00, 0x9c, 0x00, 0x1a, 0x00
    ];
    tables.insert("gen_31_17".to_string(), gen_31_17_data.to_vec());

    // Table gen_31_19 (26 bytes)
    let gen_31_19_data: [u8; 26] = [
        0x01, 0x00, 0x88, 0x00, 0xc1, 0x00, 0x22, 0x00, 0x33, 0x00, 0x82, 0x00, 0x93, 0x00, 0xa7, 0x00, 0xaa, 0x00, 0x84, 0x00, 0xaf, 0x00, 0xfc, 0x00, 0x78, 0x00
    ];
    tables.insert("gen_31_19".to_string(), gen_31_19_data.to_vec());

    // Table gen_31_21 (22 bytes)
    let gen_31_21_data: [u8; 22] = [
        0x01, 0x00, 0xad, 0x00, 0x2f, 0x00, 0x8c, 0x00, 0xbe, 0x00, 0xc5, 0x00, 0x1e, 0x00, 0xbc, 0x00, 0x44, 0x00, 0xd4, 0x00, 0xa0, 0x00
    ];
    tables.insert("gen_31_21".to_string(), gen_31_21_data.to_vec());

    // Table gen_31_23 (18 bytes)
    let gen_31_23_data: [u8; 18] = [
        0x01, 0x00, 0xe3, 0x00, 0x2c, 0x00, 0xb2, 0x00, 0x47, 0x00, 0xac, 0x00, 0x08, 0x00, 0xe0, 0x00, 0x25, 0x00
    ];
    tables.insert("gen_31_23".to_string(), gen_31_23_data.to_vec());

    // Table gen_31_25 (14 bytes)
    let gen_31_25_data: [u8; 14] = [
        0x01, 0x00, 0x7e, 0x00, 0x04, 0x00, 0x9e, 0x00, 0x3a, 0x00, 0x31, 0x00, 0x75, 0x00
    ];
    tables.insert("gen_31_25".to_string(), gen_31_25_data.to_vec());

    // Table gen_31_27 (10 bytes)
    let gen_31_27_data: [u8; 10] = [
        0x01, 0x00, 0x1e, 0x00, 0xd8, 0x00, 0xe7, 0x00, 0x74, 0x00
    ];
    tables.insert("gen_31_27".to_string(), gen_31_27_data.to_vec());

    // Table gen_31_29 (6 bytes)
    let gen_31_29_data: [u8; 6] = [
        0x01, 0x00, 0x06, 0x00, 0x08, 0x00
    ];
    tables.insert("gen_31_29".to_string(), gen_31_29_data.to_vec());

    // Table gen_63_1 (126 bytes)
    let gen_63_1_data = include_bytes!("tables/gen_63_1.bin");
    tables.insert("gen_63_1".to_string(), gen_63_1_data.to_vec());

    // Table gen_63_3 (122 bytes)
    let gen_63_3_data = include_bytes!("tables/gen_63_3.bin");
    tables.insert("gen_63_3".to_string(), gen_63_3_data.to_vec());

    // Table gen_63_5 (118 bytes)
    let gen_63_5_data = include_bytes!("tables/gen_63_5.bin");
    tables.insert("gen_63_5".to_string(), gen_63_5_data.to_vec());

    // Table gen_63_7 (114 bytes)
    let gen_63_7_data = include_bytes!("tables/gen_63_7.bin");
    tables.insert("gen_63_7".to_string(), gen_63_7_data.to_vec());

    // Table gen_63_9 (110 bytes)
    let gen_63_9_data = include_bytes!("tables/gen_63_9.bin");
    tables.insert("gen_63_9".to_string(), gen_63_9_data.to_vec());

    // Table gen_63_11 (106 bytes)
    let gen_63_11_data = include_bytes!("tables/gen_63_11.bin");
    tables.insert("gen_63_11".to_string(), gen_63_11_data.to_vec());

    // Table gen_63_13 (102 bytes)
    let gen_63_13_data = include_bytes!("tables/gen_63_13.bin");
    tables.insert("gen_63_13".to_string(), gen_63_13_data.to_vec());

    // Table gen_63_15 (98 bytes)
    let gen_63_15_data: [u8; 98] = [
        0x01, 0x00, 0x7a, 0x00, 0x0c, 0x00, 0x0e, 0x00, 0xda, 0x00, 0xc3, 0x00, 0x49, 0x00, 0xc2, 0x00, 0x9d, 0x00, 0x20, 0x00, 0x11, 0x00, 0x05, 0x00, 0x3e, 0x00, 0x47, 0x00, 0x0f, 0x00, 0x19, 0x00, 0xf0, 0x00, 0xa1, 0x00, 0x15, 0x00, 0xda, 0x00, 0x94, 0x00, 0xb0, 0x00, 0x6d, 0x00, 0xb7, 0x00, 0x95, 0x00, 0xa6, 0x00, 0xf5, 0x00, 0xda, 0x00, 0xfb, 0x00, 0x97, 0x00, 0x96, 0x00, 0xaa, 0x00, 0xc3, 0x00, 0x97, 0x00, 0xa0, 0x00, 0x0c, 0x00, 0x82, 0x00, 0xdb, 0x00, 0x75, 0x00, 0xf4, 0x00, 0x0a, 0x00, 0xa9, 0x00, 0x13, 0x00, 0xcc, 0x00, 0x71, 0x00, 0x51, 0x00, 0xd6, 0x00, 0xe7, 0x00, 0xe4, 0x00
    ];
    tables.insert("gen_63_15".to_string(), gen_63_15_data.to_vec());

    // Table gen_63_17 (94 bytes)
    let gen_63_17_data: [u8; 94] = [
        0x01, 0x00, 0x1f, 0x00, 0xd9, 0x00, 0xa3, 0x00, 0xf8, 0x00, 0x08, 0x00, 0xf4, 0x00, 0xa2, 0x00, 0xc5, 0x00, 0xc8, 0x00, 0xbd, 0x00, 0x11, 0x00, 0x98, 0x00, 0xc2, 0x00, 0xcc, 0x00, 0xa8, 0x00, 0xb9, 0x00, 0x0f, 0x00, 0x4e, 0x00, 0x39, 0x00, 0xcb, 0x00, 0xae, 0x00, 0xf3, 0x00, 0xd2, 0x00, 0x03, 0x00, 0x30, 0x00, 0xec, 0x00, 0x7f, 0x00, 0x13, 0x00, 0x44, 0x00, 0xda, 0x00, 0x74, 0x00, 0x6a, 0x00, 0x0c, 0x00, 0x8f, 0x00, 0x39, 0x00, 0x59, 0x00, 0xe1, 0x00, 0xa1, 0x00, 0xc8, 0x00, 0x3a, 0x00, 0x6b, 0x00, 0xfa, 0x00, 0xe8, 0x00, 0xa1, 0x00, 0xcc, 0x00, 0x6f, 0x00
    ];
    tables.insert("gen_63_17".to_string(), gen_63_17_data.to_vec());

    // Table gen_63_19 (90 bytes)
    let gen_63_19_data: [u8; 90] = [
        0x01, 0x00, 0x41, 0x00, 0x3a, 0x00, 0x5f, 0x00, 0x33, 0x00, 0x1e, 0x00, 0xad, 0x00, 0x1e, 0x00, 0xa1, 0x00, 0xdb, 0x00, 0x07, 0x00, 0x11, 0x00, 0x01, 0x00, 0xdd, 0x00, 0x35, 0x00, 0x7f, 0x00, 0x42, 0x00, 0x06, 0x00, 0x63, 0x00, 0x27, 0x00, 0xcd, 0x00, 0xea, 0x00, 0x20, 0x00, 0xc2, 0x00, 0x44, 0x00, 0xfc, 0x00, 0xfe, 0x00, 0xd8, 0x00, 0x39, 0x00, 0x29, 0x00, 0xa8, 0x00, 0x86, 0x00, 0x64, 0x00, 0xd6, 0x00, 0x3d, 0x00, 0xad, 0x00, 0xc4, 0x00, 0x58, 0x00, 0xa6, 0x00, 0x1e, 0x00, 0xd7, 0x00, 0x39, 0x00, 0xa8, 0x00, 0xf8, 0x00, 0x24, 0x00
    ];
    tables.insert("gen_63_19".to_string(), gen_63_19_data.to_vec());

    // Table gen_63_21 (86 bytes)
    let gen_63_21_data: [u8; 86] = [
        0x01, 0x00, 0xd8, 0x00, 0x1a, 0x00, 0x12, 0x00, 0xfb, 0x00, 0x60, 0x00, 0x8f, 0x00, 0xa8, 0x00, 0x16, 0x00, 0x3a, 0x00, 0x87, 0x00, 0x2f, 0x00, 0x8e, 0x00, 0xfb, 0x00, 0xa7, 0x00, 0x33, 0x00, 0x11, 0x00, 0x83, 0x00, 0x06, 0x00, 0xa6, 0x00, 0x66, 0x00, 0xed, 0x00, 0xe5, 0x00, 0x94, 0x00, 0x72, 0x00, 0xc6, 0x00, 0xb9, 0x00, 0x85, 0x00, 0xd8, 0x00, 0x99, 0x00, 0x5c, 0x00, 0xfa, 0x00, 0xf5, 0x00, 0x26, 0x00, 0x27, 0x00, 0xcb, 0x00, 0x73, 0x00, 0x51, 0x00, 0x1c, 0x00, 0xf3, 0x00, 0xd5, 0x00, 0xa3, 0x00, 0x21, 0x00
    ];
    tables.insert("gen_63_21".to_string(), gen_63_21_data.to_vec());

    // Table gen_63_23 (82 bytes)
    let gen_63_23_data: [u8; 82] = [
        0x01, 0x00, 0xb9, 0x00, 0xc7, 0x00, 0xd3, 0x00, 0x91, 0x00, 0x04, 0x00, 0x0d, 0x00, 0xa9, 0x00, 0xf2, 0x00, 0x9e, 0x00, 0xb3, 0x00, 0x08, 0x00, 0x2f, 0x00, 0xe3, 0x00, 0x5e, 0x00, 0x6c, 0x00, 0xec, 0x00, 0x5e, 0x00, 0xee, 0x00, 0x53, 0x00, 0x32, 0x00, 0x83, 0x00, 0x66, 0x00, 0x19, 0x00, 0xc0, 0x00, 0x1c, 0x00, 0x6f, 0x00, 0x51, 0x00, 0x2a, 0x00, 0xed, 0x00, 0xbc, 0x00, 0x78, 0x00, 0x64, 0x00, 0xb7, 0x00, 0xfc, 0x00, 0x68, 0x00, 0x5d, 0x00, 0x13, 0x00, 0xa3, 0x00, 0x89, 0x00, 0xa0, 0x00
    ];
    tables.insert("gen_63_23".to_string(), gen_63_23_data.to_vec());

    // Table gen_63_25 (78 bytes)
    let gen_63_25_data: [u8; 78] = [
        0x01, 0x00, 0xe6, 0x00, 0x25, 0x00, 0xd4, 0x00, 0xf7, 0x00, 0xeb, 0x00, 0xbe, 0x00, 0x6c, 0x00, 0x88, 0x00, 0x69, 0x00, 0x3d, 0x00, 0xdc, 0x00, 0xe3, 0x00, 0x27, 0x00, 0xf0, 0x00, 0xb9, 0x00, 0xcc, 0x00, 0x5d, 0x00, 0x86, 0x00, 0x99, 0x00, 0x21, 0x00, 0xda, 0x00, 0xfa, 0x00, 0xc3, 0x00, 0x5a, 0x00, 0xcd, 0x00, 0x32, 0x00, 0xfa, 0x00, 0x2f, 0x00, 0x19, 0x00, 0xea, 0x00, 0x51, 0x00, 0xde, 0x00, 0x4c, 0x00, 0x14, 0x00, 0x72, 0x00, 0x57, 0x00, 0xaf, 0x00, 0xf5, 0x00
    ];
    tables.insert("gen_63_25".to_string(), gen_63_25_data.to_vec());

    // Table gen_63_27 (74 bytes)
    let gen_63_27_data: [u8; 74] = [
        0x01, 0x00, 0x38, 0x00, 0x37, 0x00, 0x22, 0x00, 0xb4, 0x00, 0xdb, 0x00, 0x4a, 0x00, 0x47, 0x00, 0xb0, 0x00, 0x2f, 0x00, 0xbf, 0x00, 0x66, 0x00, 0xcd, 0x00, 0x96, 0x00, 0x3f, 0x00, 0x85, 0x00, 0x3a, 0x00, 0x01, 0x00, 0x33, 0x00, 0x4a, 0x00, 0xbb, 0x00, 0x16, 0x00, 0xd2, 0x00, 0x67, 0x00, 0xfb, 0x00, 0x2e, 0x00, 0xe0, 0x00, 0x29, 0x00, 0x44, 0x00, 0x55, 0x00, 0x48, 0x00, 0x52, 0x00, 0x18, 0x00, 0x9a, 0x00, 0xcd, 0x00, 0xbe, 0x00, 0xe4, 0x00
    ];
    tables.insert("gen_63_27".to_string(), gen_63_27_data.to_vec());

    // Table gen_63_29 (70 bytes)
    let gen_63_29_data: [u8; 70] = [
        0x01, 0x00, 0x81, 0x00, 0xf0, 0x00, 0xa4, 0x00, 0x43, 0x00, 0xc0, 0x00, 0x0c, 0x00, 0x7c, 0x00, 0x0c, 0x00, 0x3e, 0x00, 0x0d, 0x00, 0x97, 0x00, 0xa7, 0x00, 0x86, 0x00, 0x39, 0x00, 0xab, 0x00, 0x15, 0x00, 0x0f, 0x00, 0xe3, 0x00, 0x1b, 0x00, 0x10, 0x00, 0x16, 0x00, 0x33, 0x00, 0xf0, 0x00, 0x71, 0x00, 0x42, 0x00, 0x7f, 0x00, 0x59, 0x00, 0xd5, 0x00, 0xc8, 0x00, 0x77, 0x00, 0x17, 0x00, 0x71, 0x00, 0xbf, 0x00, 0xd6, 0x00
    ];
    tables.insert("gen_63_29".to_string(), gen_63_29_data.to_vec());

    // Table gen_63_31 (66 bytes)
    let gen_63_31_data: [u8; 66] = [
        0x01, 0x00, 0xe8, 0x00, 0x1d, 0x00, 0xbd, 0x00, 0x32, 0x00, 0x8e, 0x00, 0xf6, 0x00, 0xe8, 0x00, 0x0f, 0x00, 0x2b, 0x00, 0x52, 0x00, 0xa4, 0x00, 0xee, 0x00, 0x01, 0x00, 0x9e, 0x00, 0x0d, 0x00, 0x77, 0x00, 0x9e, 0x00, 0xe0, 0x00, 0x86, 0x00, 0xe3, 0x00, 0xd2, 0x00, 0xa3, 0x00, 0x32, 0x00, 0x6b, 0x00, 0x28, 0x00, 0x1b, 0x00, 0x68, 0x00, 0xfd, 0x00, 0x18, 0x00, 0xef, 0x00, 0xd8, 0x00, 0x2d, 0x00
    ];
    tables.insert("gen_63_31".to_string(), gen_63_31_data.to_vec());

    // Table gen_63_33 (62 bytes)
    let gen_63_33_data: [u8; 62] = [
        0x01, 0x00, 0xb5, 0x00, 0xff, 0x00, 0x52, 0x00, 0xe4, 0x00, 0x45, 0x00, 0x4a, 0x00, 0x6e, 0x00, 0xae, 0x00, 0xd2, 0x00, 0x69, 0x00, 0x76, 0x00, 0x43, 0x00, 0xad, 0x00, 0x67, 0x00, 0x8b, 0x00, 0x15, 0x00, 0xd2, 0x00, 0x41, 0x00, 0xe9, 0x00, 0xf2, 0x00, 0xe9, 0x00, 0x49, 0x00, 0x4b, 0x00, 0x6f, 0x00, 0x75, 0x00, 0xb0, 0x00, 0x74, 0x00, 0x99, 0x00, 0x45, 0x00, 0x59, 0x00
    ];
    tables.insert("gen_63_33".to_string(), gen_63_33_data.to_vec());

    // Table gen_63_35 (58 bytes)
    let gen_63_35_data: [u8; 58] = [
        0x01, 0x00, 0xe5, 0x00, 0x24, 0x00, 0xe0, 0x00, 0xd0, 0x00, 0x7a, 0x00, 0x2c, 0x00, 0x7c, 0x00, 0xa5, 0x00, 0x93, 0x00, 0x1c, 0x00, 0x53, 0x00, 0x73, 0x00, 0x2b, 0x00, 0xd4, 0x00, 0x83, 0x00, 0x9b, 0x00, 0x94, 0x00, 0x6f, 0x00, 0x3a, 0x00, 0x68, 0x00, 0xa1, 0x00, 0x9b, 0x00, 0xeb, 0x00, 0x54, 0x00, 0xcd, 0x00, 0xa1, 0x00, 0x25, 0x00, 0xaa, 0x00
    ];
    tables.insert("gen_63_35".to_string(), gen_63_35_data.to_vec());

    // Table gen_63_37 (54 bytes)
    let gen_63_37_data: [u8; 54] = [
        0x01, 0x00, 0xf1, 0x00, 0xcc, 0x00, 0xd1, 0x00, 0x40, 0x00, 0xd0, 0x00, 0xa5, 0x00, 0x33, 0x00, 0x03, 0x00, 0x39, 0x00, 0xb2, 0x00, 0xec, 0x00, 0x6a, 0x00, 0xab, 0x00, 0xc2, 0x00, 0xe3, 0x00, 0x4a, 0x00, 0x80, 0x00, 0xe6, 0x00, 0x9d, 0x00, 0xec, 0x00, 0x2f, 0x00, 0x36, 0x00, 0xe3, 0x00, 0xe5, 0x00, 0x7d, 0x00, 0xd9, 0x00
    ];
    tables.insert("gen_63_37".to_string(), gen_63_37_data.to_vec());

    // Table gen_63_39 (50 bytes)
    let gen_63_39_data: [u8; 50] = [
        0x01, 0x00, 0xf4, 0x00, 0xc5, 0x00, 0x21, 0x00, 0x14, 0x00, 0xc3, 0x00, 0xc5, 0x00, 0x08, 0x00, 0xda, 0x00, 0xfc, 0x00, 0xae, 0x00, 0x96, 0x00, 0xc6, 0x00, 0xa7, 0x00, 0x2c, 0x00, 0x7d, 0x00, 0xfb, 0x00, 0x85, 0x00, 0x2d, 0x00, 0x4f, 0x00, 0xad, 0x00, 0xd0, 0x00, 0xc7, 0x00, 0x6c, 0x00, 0xc1, 0x00
    ];
    tables.insert("gen_63_39".to_string(), gen_63_39_data.to_vec());

    // Table gen_63_41 (46 bytes)
    let gen_63_41_data: [u8; 46] = [
        0x01, 0x00, 0xb2, 0x00, 0xf6, 0x00, 0x6c, 0x00, 0xcf, 0x00, 0x43, 0x00, 0xcb, 0x00, 0x75, 0x00, 0xed, 0x00, 0xf4, 0x00, 0xa1, 0x00, 0xb2, 0x00, 0xb1, 0x00, 0x75, 0x00, 0x6e, 0x00, 0x1f, 0x00, 0xd9, 0x00, 0xcb, 0x00, 0x49, 0x00, 0x4b, 0x00, 0x33, 0x00, 0x6e, 0x00, 0x47, 0x00
    ];
    tables.insert("gen_63_41".to_string(), gen_63_41_data.to_vec());

    // Table gen_63_43 (42 bytes)
    let gen_63_43_data: [u8; 42] = [
        0x01, 0x00, 0x2d, 0x00, 0xde, 0x00, 0xd3, 0x00, 0x50, 0x00, 0x61, 0x00, 0xe5, 0x00, 0x27, 0x00, 0x64, 0x00, 0xb2, 0x00, 0xae, 0x00, 0xf7, 0x00, 0x8b, 0x00, 0xd9, 0x00, 0x47, 0x00, 0xb3, 0x00, 0x96, 0x00, 0x7a, 0x00, 0xf4, 0x00, 0xa6, 0x00, 0x59, 0x00
    ];
    tables.insert("gen_63_43".to_string(), gen_63_43_data.to_vec());

    // Table gen_63_45 (38 bytes)
    let gen_63_45_data: [u8; 38] = [
        0x01, 0x00, 0xc3, 0x00, 0xcb, 0x00, 0xd1, 0x00, 0x43, 0x00, 0x57, 0x00, 0x88, 0x00, 0x33, 0x00, 0xab, 0x00, 0xfe, 0x00, 0x8d, 0x00, 0x63, 0x00, 0xe6, 0x00, 0x74, 0x00, 0x19, 0x00, 0xb4, 0x00, 0x3e, 0x00, 0x1f, 0x00, 0xb3, 0x00
    ];
    tables.insert("gen_63_45".to_string(), gen_63_45_data.to_vec());

    // Table gen_63_47 (34 bytes)
    let gen_63_47_data: [u8; 34] = [
        0x01, 0x00, 0x76, 0x00, 0x34, 0x00, 0x67, 0x00, 0x1f, 0x00, 0x68, 0x00, 0x7e, 0x00, 0xbb, 0x00, 0xe8, 0x00, 0x11, 0x00, 0x38, 0x00, 0xb7, 0x00, 0x31, 0x00, 0x64, 0x00, 0x51, 0x00, 0x2c, 0x00, 0x4f, 0x00
    ];
    tables.insert("gen_63_47".to_string(), gen_63_47_data.to_vec());

    // Table gen_63_49 (30 bytes)
    let gen_63_49_data: [u8; 30] = [
        0x01, 0x00, 0x1c, 0x00, 0xd8, 0x00, 0xb7, 0x00, 0x14, 0x00, 0x64, 0x00, 0x2e, 0x00, 0x24, 0x00, 0x4d, 0x00, 0x24, 0x00, 0xaf, 0x00, 0x2b, 0x00, 0xbc, 0x00, 0x9c, 0x00, 0x1a, 0x00
    ];
    tables.insert("gen_63_49".to_string(), gen_63_49_data.to_vec());

    // Table gen_63_51 (26 bytes)
    let gen_63_51_data: [u8; 26] = [
        0x01, 0x00, 0x88, 0x00, 0xc1, 0x00, 0x22, 0x00, 0x33, 0x00, 0x82, 0x00, 0x93, 0x00, 0xa7, 0x00, 0xaa, 0x00, 0x84, 0x00, 0xaf, 0x00, 0xfc, 0x00, 0x78, 0x00
    ];
    tables.insert("gen_63_51".to_string(), gen_63_51_data.to_vec());

    // Table gen_63_53 (22 bytes)
    let gen_63_53_data: [u8; 22] = [
        0x01, 0x00, 0xad, 0x00, 0x2f, 0x00, 0x8c, 0x00, 0xbe, 0x00, 0xc5, 0x00, 0x1e, 0x00, 0xbc, 0x00, 0x44, 0x00, 0xd4, 0x00, 0xa0, 0x00
    ];
    tables.insert("gen_63_53".to_string(), gen_63_53_data.to_vec());

    // Table gen_63_55 (18 bytes)
    let gen_63_55_data: [u8; 18] = [
        0x01, 0x00, 0xe3, 0x00, 0x2c, 0x00, 0xb2, 0x00, 0x47, 0x00, 0xac, 0x00, 0x08, 0x00, 0xe0, 0x00, 0x25, 0x00
    ];
    tables.insert("gen_63_55".to_string(), gen_63_55_data.to_vec());

    // Table gen_63_57 (14 bytes)
    let gen_63_57_data: [u8; 14] = [
        0x01, 0x00, 0x7e, 0x00, 0x04, 0x00, 0x9e, 0x00, 0x3a, 0x00, 0x31, 0x00, 0x75, 0x00
    ];
    tables.insert("gen_63_57".to_string(), gen_63_57_data.to_vec());

    // Table gen_63_59 (10 bytes)
    let gen_63_59_data: [u8; 10] = [
        0x01, 0x00, 0x1e, 0x00, 0xd8, 0x00, 0xe7, 0x00, 0x74, 0x00
    ];
    tables.insert("gen_63_59".to_string(), gen_63_59_data.to_vec());

    // Table gen_63_61 (6 bytes)
    let gen_63_61_data: [u8; 6] = [
        0x01, 0x00, 0x06, 0x00, 0x08, 0x00
    ];
    tables.insert("gen_63_61".to_string(), gen_63_61_data.to_vec());

    // Table gen_127_1 (254 bytes)
    let gen_127_1_data = include_bytes!("tables/gen_127_1.bin");
    tables.insert("gen_127_1".to_string(), gen_127_1_data.to_vec());

    // Table gen_127_3 (250 bytes)
    let gen_127_3_data = include_bytes!("tables/gen_127_3.bin");
    tables.insert("gen_127_3".to_string(), gen_127_3_data.to_vec());

    // Table gen_127_5 (246 bytes)
    let gen_127_5_data = include_bytes!("tables/gen_127_5.bin");
    tables.insert("gen_127_5".to_string(), gen_127_5_data.to_vec());

    // Table gen_127_7 (242 bytes)
    let gen_127_7_data = include_bytes!("tables/gen_127_7.bin");
    tables.insert("gen_127_7".to_string(), gen_127_7_data.to_vec());

    // Table gen_127_9 (238 bytes)
    let gen_127_9_data = include_bytes!("tables/gen_127_9.bin");
    tables.insert("gen_127_9".to_string(), gen_127_9_data.to_vec());

    // Table gen_127_11 (234 bytes)
    let gen_127_11_data = include_bytes!("tables/gen_127_11.bin");
    tables.insert("gen_127_11".to_string(), gen_127_11_data.to_vec());

    // Table gen_127_13 (230 bytes)
    let gen_127_13_data = include_bytes!("tables/gen_127_13.bin");
    tables.insert("gen_127_13".to_string(), gen_127_13_data.to_vec());

    // Table gen_127_15 (226 bytes)
    let gen_127_15_data = include_bytes!("tables/gen_127_15.bin");
    tables.insert("gen_127_15".to_string(), gen_127_15_data.to_vec());

    // Table gen_127_17 (222 bytes)
    let gen_127_17_data = include_bytes!("tables/gen_127_17.bin");
    tables.insert("gen_127_17".to_string(), gen_127_17_data.to_vec());

    // Table gen_127_19 (218 bytes)
    let gen_127_19_data = include_bytes!("tables/gen_127_19.bin");
    tables.insert("gen_127_19".to_string(), gen_127_19_data.to_vec());

    // Table gen_127_21 (214 bytes)
    let gen_127_21_data = include_bytes!("tables/gen_127_21.bin");
    tables.insert("gen_127_21".to_string(), gen_127_21_data.to_vec());

    // Table gen_127_23 (210 bytes)
    let gen_127_23_data = include_bytes!("tables/gen_127_23.bin");
    tables.insert("gen_127_23".to_string(), gen_127_23_data.to_vec());

    // Table gen_127_25 (206 bytes)
    let gen_127_25_data = include_bytes!("tables/gen_127_25.bin");
    tables.insert("gen_127_25".to_string(), gen_127_25_data.to_vec());

    // Table gen_127_27 (202 bytes)
    let gen_127_27_data = include_bytes!("tables/gen_127_27.bin");
    tables.insert("gen_127_27".to_string(), gen_127_27_data.to_vec());

    // Table gen_127_29 (198 bytes)
    let gen_127_29_data = include_bytes!("tables/gen_127_29.bin");
    tables.insert("gen_127_29".to_string(), gen_127_29_data.to_vec());

    // Table gen_127_31 (194 bytes)
    let gen_127_31_data = include_bytes!("tables/gen_127_31.bin");
    tables.insert("gen_127_31".to_string(), gen_127_31_data.to_vec());

    // Table gen_127_33 (190 bytes)
    let gen_127_33_data = include_bytes!("tables/gen_127_33.bin");
    tables.insert("gen_127_33".to_string(), gen_127_33_data.to_vec());

    // Table gen_127_35 (186 bytes)
    let gen_127_35_data = include_bytes!("tables/gen_127_35.bin");
    tables.insert("gen_127_35".to_string(), gen_127_35_data.to_vec());

    // Table gen_127_37 (182 bytes)
    let gen_127_37_data = include_bytes!("tables/gen_127_37.bin");
    tables.insert("gen_127_37".to_string(), gen_127_37_data.to_vec());

    // Table gen_127_39 (178 bytes)
    let gen_127_39_data = include_bytes!("tables/gen_127_39.bin");
    tables.insert("gen_127_39".to_string(), gen_127_39_data.to_vec());

    // Table gen_127_41 (174 bytes)
    let gen_127_41_data = include_bytes!("tables/gen_127_41.bin");
    tables.insert("gen_127_41".to_string(), gen_127_41_data.to_vec());

    // Table gen_127_43 (170 bytes)
    let gen_127_43_data = include_bytes!("tables/gen_127_43.bin");
    tables.insert("gen_127_43".to_string(), gen_127_43_data.to_vec());

    // Table gen_127_45 (166 bytes)
    let gen_127_45_data = include_bytes!("tables/gen_127_45.bin");
    tables.insert("gen_127_45".to_string(), gen_127_45_data.to_vec());

    // Table gen_127_47 (162 bytes)
    let gen_127_47_data = include_bytes!("tables/gen_127_47.bin");
    tables.insert("gen_127_47".to_string(), gen_127_47_data.to_vec());

    // Table gen_127_49 (158 bytes)
    let gen_127_49_data = include_bytes!("tables/gen_127_49.bin");
    tables.insert("gen_127_49".to_string(), gen_127_49_data.to_vec());

    // Table gen_127_51 (154 bytes)
    let gen_127_51_data = include_bytes!("tables/gen_127_51.bin");
    tables.insert("gen_127_51".to_string(), gen_127_51_data.to_vec());

    // Table gen_127_53 (150 bytes)
    let gen_127_53_data = include_bytes!("tables/gen_127_53.bin");
    tables.insert("gen_127_53".to_string(), gen_127_53_data.to_vec());

    // Table gen_127_55 (146 bytes)
    let gen_127_55_data = include_bytes!("tables/gen_127_55.bin");
    tables.insert("gen_127_55".to_string(), gen_127_55_data.to_vec());

    // Table gen_127_57 (142 bytes)
    let gen_127_57_data = include_bytes!("tables/gen_127_57.bin");
    tables.insert("gen_127_57".to_string(), gen_127_57_data.to_vec());

    // Table gen_127_59 (138 bytes)
    let gen_127_59_data = include_bytes!("tables/gen_127_59.bin");
    tables.insert("gen_127_59".to_string(), gen_127_59_data.to_vec());

    // Table gen_127_61 (134 bytes)
    let gen_127_61_data = include_bytes!("tables/gen_127_61.bin");
    tables.insert("gen_127_61".to_string(), gen_127_61_data.to_vec());

    // Table gen_127_63 (130 bytes)
    let gen_127_63_data = include_bytes!("tables/gen_127_63.bin");
    tables.insert("gen_127_63".to_string(), gen_127_63_data.to_vec());

    // Table gen_127_65 (126 bytes)
    let gen_127_65_data = include_bytes!("tables/gen_127_65.bin");
    tables.insert("gen_127_65".to_string(), gen_127_65_data.to_vec());

    // Table gen_127_67 (122 bytes)
    let gen_127_67_data = include_bytes!("tables/gen_127_67.bin");
    tables.insert("gen_127_67".to_string(), gen_127_67_data.to_vec());

    // Table gen_127_69 (118 bytes)
    let gen_127_69_data = include_bytes!("tables/gen_127_69.bin");
    tables.insert("gen_127_69".to_string(), gen_127_69_data.to_vec());

    // Table gen_127_71 (114 bytes)
    let gen_127_71_data = include_bytes!("tables/gen_127_71.bin");
    tables.insert("gen_127_71".to_string(), gen_127_71_data.to_vec());

    // Table gen_127_73 (110 bytes)
    let gen_127_73_data = include_bytes!("tables/gen_127_73.bin");
    tables.insert("gen_127_73".to_string(), gen_127_73_data.to_vec());

    // Table gen_127_75 (106 bytes)
    let gen_127_75_data = include_bytes!("tables/gen_127_75.bin");
    tables.insert("gen_127_75".to_string(), gen_127_75_data.to_vec());

    // Table gen_127_77 (102 bytes)
    let gen_127_77_data = include_bytes!("tables/gen_127_77.bin");
    tables.insert("gen_127_77".to_string(), gen_127_77_data.to_vec());

    // Table gen_127_79 (98 bytes)
    let gen_127_79_data: [u8; 98] = [
        0x01, 0x00, 0x7a, 0x00, 0x0c, 0x00, 0x0e, 0x00, 0xda, 0x00, 0xc3, 0x00, 0x49, 0x00, 0xc2, 0x00, 0x9d, 0x00, 0x20, 0x00, 0x11, 0x00, 0x05, 0x00, 0x3e, 0x00, 0x47, 0x00, 0x0f, 0x00, 0x19, 0x00, 0xf0, 0x00, 0xa1, 0x00, 0x15, 0x00, 0xda, 0x00, 0x94, 0x00, 0xb0, 0x00, 0x6d, 0x00, 0xb7, 0x00, 0x95, 0x00, 0xa6, 0x00, 0xf5, 0x00, 0xda, 0x00, 0xfb, 0x00, 0x97, 0x00, 0x96, 0x00, 0xaa, 0x00, 0xc3, 0x00, 0x97, 0x00, 0xa0, 0x00, 0x0c, 0x00, 0x82, 0x00, 0xdb, 0x00, 0x75, 0x00, 0xf4, 0x00, 0x0a, 0x00, 0xa9, 0x00, 0x13, 0x00, 0xcc, 0x00, 0x71, 0x00, 0x51, 0x00, 0xd6, 0x00, 0xe7, 0x00, 0xe4, 0x00
    ];
    tables.insert("gen_127_79".to_string(), gen_127_79_data.to_vec());

    // Table gen_127_81 (94 bytes)
    let gen_127_81_data: [u8; 94] = [
        0x01, 0x00, 0x1f, 0x00, 0xd9, 0x00, 0xa3, 0x00, 0xf8, 0x00, 0x08, 0x00, 0xf4, 0x00, 0xa2, 0x00, 0xc5, 0x00, 0xc8, 0x00, 0xbd, 0x00, 0x11, 0x00, 0x98, 0x00, 0xc2, 0x00, 0xcc, 0x00, 0xa8, 0x00, 0xb9, 0x00, 0x0f, 0x00, 0x4e, 0x00, 0x39, 0x00, 0xcb, 0x00, 0xae, 0x00, 0xf3, 0x00, 0xd2, 0x00, 0x03, 0x00, 0x30, 0x00, 0xec, 0x00, 0x7f, 0x00, 0x13, 0x00, 0x44, 0x00, 0xda, 0x00, 0x74, 0x00, 0x6a, 0x00, 0x0c, 0x00, 0x8f, 0x00, 0x39, 0x00, 0x59, 0x00, 0xe1, 0x00, 0xa1, 0x00, 0xc8, 0x00, 0x3a, 0x00, 0x6b, 0x00, 0xfa, 0x00, 0xe8, 0x00, 0xa1, 0x00, 0xcc, 0x00, 0x6f, 0x00
    ];
    tables.insert("gen_127_81".to_string(), gen_127_81_data.to_vec());

    // Table gen_127_83 (90 bytes)
    let gen_127_83_data: [u8; 90] = [
        0x01, 0x00, 0x41, 0x00, 0x3a, 0x00, 0x5f, 0x00, 0x33, 0x00, 0x1e, 0x00, 0xad, 0x00, 0x1e, 0x00, 0xa1, 0x00, 0xdb, 0x00, 0x07, 0x00, 0x11, 0x00, 0x01, 0x00, 0xdd, 0x00, 0x35, 0x00, 0x7f, 0x00, 0x42, 0x00, 0x06, 0x00, 0x63, 0x00, 0x27, 0x00, 0xcd, 0x00, 0xea, 0x00, 0x20, 0x00, 0xc2, 0x00, 0x44, 0x00, 0xfc, 0x00, 0xfe, 0x00, 0xd8, 0x00, 0x39, 0x00, 0x29, 0x00, 0xa8, 0x00, 0x86, 0x00, 0x64, 0x00, 0xd6, 0x00, 0x3d, 0x00, 0xad, 0x00, 0xc4, 0x00, 0x58, 0x00, 0xa6, 0x00, 0x1e, 0x00, 0xd7, 0x00, 0x39, 0x00, 0xa8, 0x00, 0xf8, 0x00, 0x24, 0x00
    ];
    tables.insert("gen_127_83".to_string(), gen_127_83_data.to_vec());

    // Table gen_127_85 (86 bytes)
    let gen_127_85_data: [u8; 86] = [
        0x01, 0x00, 0xd8, 0x00, 0x1a, 0x00, 0x12, 0x00, 0xfb, 0x00, 0x60, 0x00, 0x8f, 0x00, 0xa8, 0x00, 0x16, 0x00, 0x3a, 0x00, 0x87, 0x00, 0x2f, 0x00, 0x8e, 0x00, 0xfb, 0x00, 0xa7, 0x00, 0x33, 0x00, 0x11, 0x00, 0x83, 0x00, 0x06, 0x00, 0xa6, 0x00, 0x66, 0x00, 0xed, 0x00, 0xe5, 0x00, 0x94, 0x00, 0x72, 0x00, 0xc6, 0x00, 0xb9, 0x00, 0x85, 0x00, 0xd8, 0x00, 0x99, 0x00, 0x5c, 0x00, 0xfa, 0x00, 0xf5, 0x00, 0x26, 0x00, 0x27, 0x00, 0xcb, 0x00, 0x73, 0x00, 0x51, 0x00, 0x1c, 0x00, 0xf3, 0x00, 0xd5, 0x00, 0xa3, 0x00, 0x21, 0x00
    ];
    tables.insert("gen_127_85".to_string(), gen_127_85_data.to_vec());

    // Table gen_127_87 (82 bytes)
    let gen_127_87_data: [u8; 82] = [
        0x01, 0x00, 0xb9, 0x00, 0xc7, 0x00, 0xd3, 0x00, 0x91, 0x00, 0x04, 0x00, 0x0d, 0x00, 0xa9, 0x00, 0xf2, 0x00, 0x9e, 0x00, 0xb3, 0x00, 0x08, 0x00, 0x2f, 0x00, 0xe3, 0x00, 0x5e, 0x00, 0x6c, 0x00, 0xec, 0x00, 0x5e, 0x00, 0xee, 0x00, 0x53, 0x00, 0x32, 0x00, 0x83, 0x00, 0x66, 0x00, 0x19, 0x00, 0xc0, 0x00, 0x1c, 0x00, 0x6f, 0x00, 0x51, 0x00, 0x2a, 0x00, 0xed, 0x00, 0xbc, 0x00, 0x78, 0x00, 0x64, 0x00, 0xb7, 0x00, 0xfc, 0x00, 0x68, 0x00, 0x5d, 0x00, 0x13, 0x00, 0xa3, 0x00, 0x89, 0x00, 0xa0, 0x00
    ];
    tables.insert("gen_127_87".to_string(), gen_127_87_data.to_vec());

    // Table gen_127_89 (78 bytes)
    let gen_127_89_data: [u8; 78] = [
        0x01, 0x00, 0xe6, 0x00, 0x25, 0x00, 0xd4, 0x00, 0xf7, 0x00, 0xeb, 0x00, 0xbe, 0x00, 0x6c, 0x00, 0x88, 0x00, 0x69, 0x00, 0x3d, 0x00, 0xdc, 0x00, 0xe3, 0x00, 0x27, 0x00, 0xf0, 0x00, 0xb9, 0x00, 0xcc, 0x00, 0x5d, 0x00, 0x86, 0x00, 0x99, 0x00, 0x21, 0x00, 0xda, 0x00, 0xfa, 0x00, 0xc3, 0x00, 0x5a, 0x00, 0xcd, 0x00, 0x32, 0x00, 0xfa, 0x00, 0x2f, 0x00, 0x19, 0x00, 0xea, 0x00, 0x51, 0x00, 0xde, 0x00, 0x4c, 0x00, 0x14, 0x00, 0x72, 0x00, 0x57, 0x00, 0xaf, 0x00, 0xf5, 0x00
    ];
    tables.insert("gen_127_89".to_string(), gen_127_89_data.to_vec());

    // Table gen_127_91 (74 bytes)
    let gen_127_91_data: [u8; 74] = [
        0x01, 0x00, 0x38, 0x00, 0x37, 0x00, 0x22, 0x00, 0xb4, 0x00, 0xdb, 0x00, 0x4a, 0x00, 0x47, 0x00, 0xb0, 0x00, 0x2f, 0x00, 0xbf, 0x00, 0x66, 0x00, 0xcd, 0x00, 0x96, 0x00, 0x3f, 0x00, 0x85, 0x00, 0x3a, 0x00, 0x01, 0x00, 0x33, 0x00, 0x4a, 0x00, 0xbb, 0x00, 0x16, 0x00, 0xd2, 0x00, 0x67, 0x00, 0xfb, 0x00, 0x2e, 0x00, 0xe0, 0x00, 0x29, 0x00, 0x44, 0x00, 0x55, 0x00, 0x48, 0x00, 0x52, 0x00, 0x18, 0x00, 0x9a, 0x00, 0xcd, 0x00, 0xbe, 0x00, 0xe4, 0x00
    ];
    tables.insert("gen_127_91".to_string(), gen_127_91_data.to_vec());

    // Table gen_127_93 (70 bytes)
    let gen_127_93_data: [u8; 70] = [
        0x01, 0x00, 0x81, 0x00, 0xf0, 0x00, 0xa4, 0x00, 0x43, 0x00, 0xc0, 0x00, 0x0c, 0x00, 0x7c, 0x00, 0x0c, 0x00, 0x3e, 0x00, 0x0d, 0x00, 0x97, 0x00, 0xa7, 0x00, 0x86, 0x00, 0x39, 0x00, 0xab, 0x00, 0x15, 0x00, 0x0f, 0x00, 0xe3, 0x00, 0x1b, 0x00, 0x10, 0x00, 0x16, 0x00, 0x33, 0x00, 0xf0, 0x00, 0x71, 0x00, 0x42, 0x00, 0x7f, 0x00, 0x59, 0x00, 0xd5, 0x00, 0xc8, 0x00, 0x77, 0x00, 0x17, 0x00, 0x71, 0x00, 0xbf, 0x00, 0xd6, 0x00
    ];
    tables.insert("gen_127_93".to_string(), gen_127_93_data.to_vec());

    // Table gen_127_95 (66 bytes)
    let gen_127_95_data: [u8; 66] = [
        0x01, 0x00, 0xe8, 0x00, 0x1d, 0x00, 0xbd, 0x00, 0x32, 0x00, 0x8e, 0x00, 0xf6, 0x00, 0xe8, 0x00, 0x0f, 0x00, 0x2b, 0x00, 0x52, 0x00, 0xa4, 0x00, 0xee, 0x00, 0x01, 0x00, 0x9e, 0x00, 0x0d, 0x00, 0x77, 0x00, 0x9e, 0x00, 0xe0, 0x00, 0x86, 0x00, 0xe3, 0x00, 0xd2, 0x00, 0xa3, 0x00, 0x32, 0x00, 0x6b, 0x00, 0x28, 0x00, 0x1b, 0x00, 0x68, 0x00, 0xfd, 0x00, 0x18, 0x00, 0xef, 0x00, 0xd8, 0x00, 0x2d, 0x00
    ];
    tables.insert("gen_127_95".to_string(), gen_127_95_data.to_vec());

    // Table gen_127_97 (62 bytes)
    let gen_127_97_data: [u8; 62] = [
        0x01, 0x00, 0xb5, 0x00, 0xff, 0x00, 0x52, 0x00, 0xe4, 0x00, 0x45, 0x00, 0x4a, 0x00, 0x6e, 0x00, 0xae, 0x00, 0xd2, 0x00, 0x69, 0x00, 0x76, 0x00, 0x43, 0x00, 0xad, 0x00, 0x67, 0x00, 0x8b, 0x00, 0x15, 0x00, 0xd2, 0x00, 0x41, 0x00, 0xe9, 0x00, 0xf2, 0x00, 0xe9, 0x00, 0x49, 0x00, 0x4b, 0x00, 0x6f, 0x00, 0x75, 0x00, 0xb0, 0x00, 0x74, 0x00, 0x99, 0x00, 0x45, 0x00, 0x59, 0x00
    ];
    tables.insert("gen_127_97".to_string(), gen_127_97_data.to_vec());

    // Table gen_127_99 (58 bytes)
    let gen_127_99_data: [u8; 58] = [
        0x01, 0x00, 0xe5, 0x00, 0x24, 0x00, 0xe0, 0x00, 0xd0, 0x00, 0x7a, 0x00, 0x2c, 0x00, 0x7c, 0x00, 0xa5, 0x00, 0x93, 0x00, 0x1c, 0x00, 0x53, 0x00, 0x73, 0x00, 0x2b, 0x00, 0xd4, 0x00, 0x83, 0x00, 0x9b, 0x00, 0x94, 0x00, 0x6f, 0x00, 0x3a, 0x00, 0x68, 0x00, 0xa1, 0x00, 0x9b, 0x00, 0xeb, 0x00, 0x54, 0x00, 0xcd, 0x00, 0xa1, 0x00, 0x25, 0x00, 0xaa, 0x00
    ];
    tables.insert("gen_127_99".to_string(), gen_127_99_data.to_vec());

    // Table gen_127_101 (54 bytes)
    let gen_127_101_data: [u8; 54] = [
        0x01, 0x00, 0xf1, 0x00, 0xcc, 0x00, 0xd1, 0x00, 0x40, 0x00, 0xd0, 0x00, 0xa5, 0x00, 0x33, 0x00, 0x03, 0x00, 0x39, 0x00, 0xb2, 0x00, 0xec, 0x00, 0x6a, 0x00, 0xab, 0x00, 0xc2, 0x00, 0xe3, 0x00, 0x4a, 0x00, 0x80, 0x00, 0xe6, 0x00, 0x9d, 0x00, 0xec, 0x00, 0x2f, 0x00, 0x36, 0x00, 0xe3, 0x00, 0xe5, 0x00, 0x7d, 0x00, 0xd9, 0x00
    ];
    tables.insert("gen_127_101".to_string(), gen_127_101_data.to_vec());

    // Table gen_127_103 (50 bytes)
    let gen_127_103_data: [u8; 50] = [
        0x01, 0x00, 0xf4, 0x00, 0xc5, 0x00, 0x21, 0x00, 0x14, 0x00, 0xc3, 0x00, 0xc5, 0x00, 0x08, 0x00, 0xda, 0x00, 0xfc, 0x00, 0xae, 0x00, 0x96, 0x00, 0xc6, 0x00, 0xa7, 0x00, 0x2c, 0x00, 0x7d, 0x00, 0xfb, 0x00, 0x85, 0x00, 0x2d, 0x00, 0x4f, 0x00, 0xad, 0x00, 0xd0, 0x00, 0xc7, 0x00, 0x6c, 0x00, 0xc1, 0x00
    ];
    tables.insert("gen_127_103".to_string(), gen_127_103_data.to_vec());

    // Table gen_127_105 (46 bytes)
    let gen_127_105_data: [u8; 46] = [
        0x01, 0x00, 0xb2, 0x00, 0xf6, 0x00, 0x6c, 0x00, 0xcf, 0x00, 0x43, 0x00, 0xcb, 0x00, 0x75, 0x00, 0xed, 0x00, 0xf4, 0x00, 0xa1, 0x00, 0xb2, 0x00, 0xb1, 0x00, 0x75, 0x00, 0x6e, 0x00, 0x1f, 0x00, 0xd9, 0x00, 0xcb, 0x00, 0x49, 0x00, 0x4b, 0x00, 0x33, 0x00, 0x6e, 0x00, 0x47, 0x00
    ];
    tables.insert("gen_127_105".to_string(), gen_127_105_data.to_vec());

    // Table gen_127_107 (42 bytes)
    let gen_127_107_data: [u8; 42] = [
        0x01, 0x00, 0x2d, 0x00, 0xde, 0x00, 0xd3, 0x00, 0x50, 0x00, 0x61, 0x00, 0xe5, 0x00, 0x27, 0x00, 0x64, 0x00, 0xb2, 0x00, 0xae, 0x00, 0xf7, 0x00, 0x8b, 0x00, 0xd9, 0x00, 0x47, 0x00, 0xb3, 0x00, 0x96, 0x00, 0x7a, 0x00, 0xf4, 0x00, 0xa6, 0x00, 0x59, 0x00
    ];
    tables.insert("gen_127_107".to_string(), gen_127_107_data.to_vec());

    // Table gen_127_109 (38 bytes)
    let gen_127_109_data: [u8; 38] = [
        0x01, 0x00, 0xc3, 0x00, 0xcb, 0x00, 0xd1, 0x00, 0x43, 0x00, 0x57, 0x00, 0x88, 0x00, 0x33, 0x00, 0xab, 0x00, 0xfe, 0x00, 0x8d, 0x00, 0x63, 0x00, 0xe6, 0x00, 0x74, 0x00, 0x19, 0x00, 0xb4, 0x00, 0x3e, 0x00, 0x1f, 0x00, 0xb3, 0x00
    ];
    tables.insert("gen_127_109".to_string(), gen_127_109_data.to_vec());

    // Table gen_127_111 (34 bytes)
    let gen_127_111_data: [u8; 34] = [
        0x01, 0x00, 0x76, 0x00, 0x34, 0x00, 0x67, 0x00, 0x1f, 0x00, 0x68, 0x00, 0x7e, 0x00, 0xbb, 0x00, 0xe8, 0x00, 0x11, 0x00, 0x38, 0x00, 0xb7, 0x00, 0x31, 0x00, 0x64, 0x00, 0x51, 0x00, 0x2c, 0x00, 0x4f, 0x00
    ];
    tables.insert("gen_127_111".to_string(), gen_127_111_data.to_vec());

    // Table gen_127_113 (30 bytes)
    let gen_127_113_data: [u8; 30] = [
        0x01, 0x00, 0x1c, 0x00, 0xd8, 0x00, 0xb7, 0x00, 0x14, 0x00, 0x64, 0x00, 0x2e, 0x00, 0x24, 0x00, 0x4d, 0x00, 0x24, 0x00, 0xaf, 0x00, 0x2b, 0x00, 0xbc, 0x00, 0x9c, 0x00, 0x1a, 0x00
    ];
    tables.insert("gen_127_113".to_string(), gen_127_113_data.to_vec());

    // Table gen_127_115 (26 bytes)
    let gen_127_115_data: [u8; 26] = [
        0x01, 0x00, 0x88, 0x00, 0xc1, 0x00, 0x22, 0x00, 0x33, 0x00, 0x82, 0x00, 0x93, 0x00, 0xa7, 0x00, 0xaa, 0x00, 0x84, 0x00, 0xaf, 0x00, 0xfc, 0x00, 0x78, 0x00
    ];
    tables.insert("gen_127_115".to_string(), gen_127_115_data.to_vec());

    // Table gen_127_117 (22 bytes)
    let gen_127_117_data: [u8; 22] = [
        0x01, 0x00, 0xad, 0x00, 0x2f, 0x00, 0x8c, 0x00, 0xbe, 0x00, 0xc5, 0x00, 0x1e, 0x00, 0xbc, 0x00, 0x44, 0x00, 0xd4, 0x00, 0xa0, 0x00
    ];
    tables.insert("gen_127_117".to_string(), gen_127_117_data.to_vec());

    // Table gen_127_119 (18 bytes)
    let gen_127_119_data: [u8; 18] = [
        0x01, 0x00, 0xe3, 0x00, 0x2c, 0x00, 0xb2, 0x00, 0x47, 0x00, 0xac, 0x00, 0x08, 0x00, 0xe0, 0x00, 0x25, 0x00
    ];
    tables.insert("gen_127_119".to_string(), gen_127_119_data.to_vec());

    // Table gen_127_121 (14 bytes)
    let gen_127_121_data: [u8; 14] = [
        0x01, 0x00, 0x7e, 0x00, 0x04, 0x00, 0x9e, 0x00, 0x3a, 0x00, 0x31, 0x00, 0x75, 0x00
    ];
    tables.insert("gen_127_121".to_string(), gen_127_121_data.to_vec());

    // Table gen_127_123 (10 bytes)
    let gen_127_123_data: [u8; 10] = [
        0x01, 0x00, 0x1e, 0x00, 0xd8, 0x00, 0xe7, 0x00, 0x74, 0x00
    ];
    tables.insert("gen_127_123".to_string(), gen_127_123_data.to_vec());

    // Table gen_127_125 (6 bytes)
    let gen_127_125_data: [u8; 6] = [
        0x01, 0x00, 0x06, 0x00, 0x08, 0x00
    ];
    tables.insert("gen_127_125".to_string(), gen_127_125_data.to_vec());

    // Table gen_255_1 (510 bytes)
    let gen_255_1_data = include_bytes!("tables/gen_255_1.bin");
    tables.insert("gen_255_1".to_string(), gen_255_1_data.to_vec());

    // Table gen_255_3 (506 bytes)
    let gen_255_3_data = include_bytes!("tables/gen_255_3.bin");
    tables.insert("gen_255_3".to_string(), gen_255_3_data.to_vec());

    // Table gen_255_5 (502 bytes)
    let gen_255_5_data = include_bytes!("tables/gen_255_5.bin");
    tables.insert("gen_255_5".to_string(), gen_255_5_data.to_vec());

    // Table gen_255_7 (498 bytes)
    let gen_255_7_data = include_bytes!("tables/gen_255_7.bin");
    tables.insert("gen_255_7".to_string(), gen_255_7_data.to_vec());

    // Table gen_255_9 (494 bytes)
    let gen_255_9_data = include_bytes!("tables/gen_255_9.bin");
    tables.insert("gen_255_9".to_string(), gen_255_9_data.to_vec());

    // Table gen_255_11 (490 bytes)
    let gen_255_11_data = include_bytes!("tables/gen_255_11.bin");
    tables.insert("gen_255_11".to_string(), gen_255_11_data.to_vec());

    // Table gen_255_13 (486 bytes)
    let gen_255_13_data = include_bytes!("tables/gen_255_13.bin");
    tables.insert("gen_255_13".to_string(), gen_255_13_data.to_vec());

    // Table gen_255_15 (482 bytes)
    let gen_255_15_data = include_bytes!("tables/gen_255_15.bin");
    tables.insert("gen_255_15".to_string(), gen_255_15_data.to_vec());

    // Table gen_255_17 (478 bytes)
    let gen_255_17_data = include_bytes!("tables/gen_255_17.bin");
    tables.insert("gen_255_17".to_string(), gen_255_17_data.to_vec());

    // Table gen_255_19 (474 bytes)
    let gen_255_19_data = include_bytes!("tables/gen_255_19.bin");
    tables.insert("gen_255_19".to_string(), gen_255_19_data.to_vec());

    // Table gen_255_21 (470 bytes)
    let gen_255_21_data = include_bytes!("tables/gen_255_21.bin");
    tables.insert("gen_255_21".to_string(), gen_255_21_data.to_vec());

    // Table gen_255_23 (466 bytes)
    let gen_255_23_data = include_bytes!("tables/gen_255_23.bin");
    tables.insert("gen_255_23".to_string(), gen_255_23_data.to_vec());

    // Table gen_255_25 (462 bytes)
    let gen_255_25_data = include_bytes!("tables/gen_255_25.bin");
    tables.insert("gen_255_25".to_string(), gen_255_25_data.to_vec());

    // Table gen_255_27 (458 bytes)
    let gen_255_27_data = include_bytes!("tables/gen_255_27.bin");
    tables.insert("gen_255_27".to_string(), gen_255_27_data.to_vec());

    // Table gen_255_29 (454 bytes)
    let gen_255_29_data = include_bytes!("tables/gen_255_29.bin");
    tables.insert("gen_255_29".to_string(), gen_255_29_data.to_vec());

    // Table gen_255_31 (450 bytes)
    let gen_255_31_data = include_bytes!("tables/gen_255_31.bin");
    tables.insert("gen_255_31".to_string(), gen_255_31_data.to_vec());

    // Table gen_255_33 (446 bytes)
    let gen_255_33_data = include_bytes!("tables/gen_255_33.bin");
    tables.insert("gen_255_33".to_string(), gen_255_33_data.to_vec());

    // Table gen_255_35 (442 bytes)
    let gen_255_35_data = include_bytes!("tables/gen_255_35.bin");
    tables.insert("gen_255_35".to_string(), gen_255_35_data.to_vec());

    // Table gen_255_37 (438 bytes)
    let gen_255_37_data = include_bytes!("tables/gen_255_37.bin");
    tables.insert("gen_255_37".to_string(), gen_255_37_data.to_vec());

    // Table gen_255_39 (434 bytes)
    let gen_255_39_data = include_bytes!("tables/gen_255_39.bin");
    tables.insert("gen_255_39".to_string(), gen_255_39_data.to_vec());

    // Table gen_255_41 (430 bytes)
    let gen_255_41_data = include_bytes!("tables/gen_255_41.bin");
    tables.insert("gen_255_41".to_string(), gen_255_41_data.to_vec());

    // Table gen_255_43 (426 bytes)
    let gen_255_43_data = include_bytes!("tables/gen_255_43.bin");
    tables.insert("gen_255_43".to_string(), gen_255_43_data.to_vec());

    // Table gen_255_45 (422 bytes)
    let gen_255_45_data = include_bytes!("tables/gen_255_45.bin");
    tables.insert("gen_255_45".to_string(), gen_255_45_data.to_vec());

    // Table gen_255_47 (418 bytes)
    let gen_255_47_data = include_bytes!("tables/gen_255_47.bin");
    tables.insert("gen_255_47".to_string(), gen_255_47_data.to_vec());

    // Table gen_255_49 (414 bytes)
    let gen_255_49_data = include_bytes!("tables/gen_255_49.bin");
    tables.insert("gen_255_49".to_string(), gen_255_49_data.to_vec());

    // Table gen_255_51 (410 bytes)
    let gen_255_51_data = include_bytes!("tables/gen_255_51.bin");
    tables.insert("gen_255_51".to_string(), gen_255_51_data.to_vec());

    // Table gen_255_53 (406 bytes)
    let gen_255_53_data = include_bytes!("tables/gen_255_53.bin");
    tables.insert("gen_255_53".to_string(), gen_255_53_data.to_vec());

    // Table gen_255_55 (402 bytes)
    let gen_255_55_data = include_bytes!("tables/gen_255_55.bin");
    tables.insert("gen_255_55".to_string(), gen_255_55_data.to_vec());

    // Table gen_255_57 (398 bytes)
    let gen_255_57_data = include_bytes!("tables/gen_255_57.bin");
    tables.insert("gen_255_57".to_string(), gen_255_57_data.to_vec());

    // Table gen_255_59 (394 bytes)
    let gen_255_59_data = include_bytes!("tables/gen_255_59.bin");
    tables.insert("gen_255_59".to_string(), gen_255_59_data.to_vec());

    // Table gen_255_61 (390 bytes)
    let gen_255_61_data = include_bytes!("tables/gen_255_61.bin");
    tables.insert("gen_255_61".to_string(), gen_255_61_data.to_vec());

    // Table gen_255_63 (386 bytes)
    let gen_255_63_data = include_bytes!("tables/gen_255_63.bin");
    tables.insert("gen_255_63".to_string(), gen_255_63_data.to_vec());

    // Table gen_255_65 (382 bytes)
    let gen_255_65_data = include_bytes!("tables/gen_255_65.bin");
    tables.insert("gen_255_65".to_string(), gen_255_65_data.to_vec());

    // Table gen_255_67 (378 bytes)
    let gen_255_67_data = include_bytes!("tables/gen_255_67.bin");
    tables.insert("gen_255_67".to_string(), gen_255_67_data.to_vec());

    // Table gen_255_69 (374 bytes)
    let gen_255_69_data = include_bytes!("tables/gen_255_69.bin");
    tables.insert("gen_255_69".to_string(), gen_255_69_data.to_vec());

    // Table gen_255_71 (370 bytes)
    let gen_255_71_data = include_bytes!("tables/gen_255_71.bin");
    tables.insert("gen_255_71".to_string(), gen_255_71_data.to_vec());

    // Table gen_255_73 (366 bytes)
    let gen_255_73_data = include_bytes!("tables/gen_255_73.bin");
    tables.insert("gen_255_73".to_string(), gen_255_73_data.to_vec());

    // Table gen_255_75 (362 bytes)
    let gen_255_75_data = include_bytes!("tables/gen_255_75.bin");
    tables.insert("gen_255_75".to_string(), gen_255_75_data.to_vec());

    // Table gen_255_77 (358 bytes)
    let gen_255_77_data = include_bytes!("tables/gen_255_77.bin");
    tables.insert("gen_255_77".to_string(), gen_255_77_data.to_vec());

    // Table gen_255_79 (354 bytes)
    let gen_255_79_data = include_bytes!("tables/gen_255_79.bin");
    tables.insert("gen_255_79".to_string(), gen_255_79_data.to_vec());

    // Table gen_255_81 (350 bytes)
    let gen_255_81_data = include_bytes!("tables/gen_255_81.bin");
    tables.insert("gen_255_81".to_string(), gen_255_81_data.to_vec());

    // Table gen_255_83 (346 bytes)
    let gen_255_83_data = include_bytes!("tables/gen_255_83.bin");
    tables.insert("gen_255_83".to_string(), gen_255_83_data.to_vec());

    // Table gen_255_85 (342 bytes)
    let gen_255_85_data = include_bytes!("tables/gen_255_85.bin");
    tables.insert("gen_255_85".to_string(), gen_255_85_data.to_vec());

    // Table gen_255_87 (338 bytes)
    let gen_255_87_data = include_bytes!("tables/gen_255_87.bin");
    tables.insert("gen_255_87".to_string(), gen_255_87_data.to_vec());

    // Table gen_255_89 (334 bytes)
    let gen_255_89_data = include_bytes!("tables/gen_255_89.bin");
    tables.insert("gen_255_89".to_string(), gen_255_89_data.to_vec());

    // Table gen_255_91 (330 bytes)
    let gen_255_91_data = include_bytes!("tables/gen_255_91.bin");
    tables.insert("gen_255_91".to_string(), gen_255_91_data.to_vec());

    // Table gen_255_93 (326 bytes)
    let gen_255_93_data = include_bytes!("tables/gen_255_93.bin");
    tables.insert("gen_255_93".to_string(), gen_255_93_data.to_vec());

    // Table gen_255_95 (322 bytes)
    let gen_255_95_data = include_bytes!("tables/gen_255_95.bin");
    tables.insert("gen_255_95".to_string(), gen_255_95_data.to_vec());

    // Table gen_255_97 (318 bytes)
    let gen_255_97_data = include_bytes!("tables/gen_255_97.bin");
    tables.insert("gen_255_97".to_string(), gen_255_97_data.to_vec());

    // Table gen_255_99 (314 bytes)
    let gen_255_99_data = include_bytes!("tables/gen_255_99.bin");
    tables.insert("gen_255_99".to_string(), gen_255_99_data.to_vec());

    // Table gen_255_101 (310 bytes)
    let gen_255_101_data = include_bytes!("tables/gen_255_101.bin");
    tables.insert("gen_255_101".to_string(), gen_255_101_data.to_vec());

    // Table gen_255_103 (306 bytes)
    let gen_255_103_data = include_bytes!("tables/gen_255_103.bin");
    tables.insert("gen_255_103".to_string(), gen_255_103_data.to_vec());

    // Table gen_255_105 (302 bytes)
    let gen_255_105_data = include_bytes!("tables/gen_255_105.bin");
    tables.insert("gen_255_105".to_string(), gen_255_105_data.to_vec());

    // Table gen_255_107 (298 bytes)
    let gen_255_107_data = include_bytes!("tables/gen_255_107.bin");
    tables.insert("gen_255_107".to_string(), gen_255_107_data.to_vec());

    // Table gen_255_109 (294 bytes)
    let gen_255_109_data = include_bytes!("tables/gen_255_109.bin");
    tables.insert("gen_255_109".to_string(), gen_255_109_data.to_vec());

    // Table gen_255_111 (290 bytes)
    let gen_255_111_data = include_bytes!("tables/gen_255_111.bin");
    tables.insert("gen_255_111".to_string(), gen_255_111_data.to_vec());

    // Table gen_255_113 (286 bytes)
    let gen_255_113_data = include_bytes!("tables/gen_255_113.bin");
    tables.insert("gen_255_113".to_string(), gen_255_113_data.to_vec());

    // Table gen_255_115 (282 bytes)
    let gen_255_115_data = include_bytes!("tables/gen_255_115.bin");
    tables.insert("gen_255_115".to_string(), gen_255_115_data.to_vec());

    // Table gen_255_117 (278 bytes)
    let gen_255_117_data = include_bytes!("tables/gen_255_117.bin");
    tables.insert("gen_255_117".to_string(), gen_255_117_data.to_vec());

    // Table gen_255_119 (274 bytes)
    let gen_255_119_data = include_bytes!("tables/gen_255_119.bin");
    tables.insert("gen_255_119".to_string(), gen_255_119_data.to_vec());

    // Table gen_255_121 (270 bytes)
    let gen_255_121_data = include_bytes!("tables/gen_255_121.bin");
    tables.insert("gen_255_121".to_string(), gen_255_121_data.to_vec());

    // Table gen_255_123 (266 bytes)
    let gen_255_123_data = include_bytes!("tables/gen_255_123.bin");
    tables.insert("gen_255_123".to_string(), gen_255_123_data.to_vec());

    // Table gen_255_125 (262 bytes)
    let gen_255_125_data = include_bytes!("tables/gen_255_125.bin");
    tables.insert("gen_255_125".to_string(), gen_255_125_data.to_vec());

    // Table gen_255_127 (258 bytes)
    let gen_255_127_data = include_bytes!("tables/gen_255_127.bin");
    tables.insert("gen_255_127".to_string(), gen_255_127_data.to_vec());

    // Table gen_255_129 (254 bytes)
    let gen_255_129_data = include_bytes!("tables/gen_255_129.bin");
    tables.insert("gen_255_129".to_string(), gen_255_129_data.to_vec());

    // Table gen_255_131 (250 bytes)
    let gen_255_131_data = include_bytes!("tables/gen_255_131.bin");
    tables.insert("gen_255_131".to_string(), gen_255_131_data.to_vec());

    // Table gen_255_133 (246 bytes)
    let gen_255_133_data = include_bytes!("tables/gen_255_133.bin");
    tables.insert("gen_255_133".to_string(), gen_255_133_data.to_vec());

    // Table gen_255_135 (242 bytes)
    let gen_255_135_data = include_bytes!("tables/gen_255_135.bin");
    tables.insert("gen_255_135".to_string(), gen_255_135_data.to_vec());

    // Table gen_255_137 (238 bytes)
    let gen_255_137_data = include_bytes!("tables/gen_255_137.bin");
    tables.insert("gen_255_137".to_string(), gen_255_137_data.to_vec());

    // Table gen_255_139 (234 bytes)
    let gen_255_139_data = include_bytes!("tables/gen_255_139.bin");
    tables.insert("gen_255_139".to_string(), gen_255_139_data.to_vec());

    // Table gen_255_141 (230 bytes)
    let gen_255_141_data = include_bytes!("tables/gen_255_141.bin");
    tables.insert("gen_255_141".to_string(), gen_255_141_data.to_vec());

    // Table gen_255_143 (226 bytes)
    let gen_255_143_data = include_bytes!("tables/gen_255_143.bin");
    tables.insert("gen_255_143".to_string(), gen_255_143_data.to_vec());

    // Table gen_255_145 (222 bytes)
    let gen_255_145_data = include_bytes!("tables/gen_255_145.bin");
    tables.insert("gen_255_145".to_string(), gen_255_145_data.to_vec());

    // Table gen_255_147 (218 bytes)
    let gen_255_147_data = include_bytes!("tables/gen_255_147.bin");
    tables.insert("gen_255_147".to_string(), gen_255_147_data.to_vec());

    // Table gen_255_149 (214 bytes)
    let gen_255_149_data = include_bytes!("tables/gen_255_149.bin");
    tables.insert("gen_255_149".to_string(), gen_255_149_data.to_vec());

    // Table gen_255_151 (210 bytes)
    let gen_255_151_data = include_bytes!("tables/gen_255_151.bin");
    tables.insert("gen_255_151".to_string(), gen_255_151_data.to_vec());

    // Table gen_255_153 (206 bytes)
    let gen_255_153_data = include_bytes!("tables/gen_255_153.bin");
    tables.insert("gen_255_153".to_string(), gen_255_153_data.to_vec());

    // Table gen_255_155 (202 bytes)
    let gen_255_155_data = include_bytes!("tables/gen_255_155.bin");
    tables.insert("gen_255_155".to_string(), gen_255_155_data.to_vec());

    // Table gen_255_157 (198 bytes)
    let gen_255_157_data = include_bytes!("tables/gen_255_157.bin");
    tables.insert("gen_255_157".to_string(), gen_255_157_data.to_vec());

    // Table gen_255_159 (194 bytes)
    let gen_255_159_data = include_bytes!("tables/gen_255_159.bin");
    tables.insert("gen_255_159".to_string(), gen_255_159_data.to_vec());

    // Table gen_255_161 (190 bytes)
    let gen_255_161_data = include_bytes!("tables/gen_255_161.bin");
    tables.insert("gen_255_161".to_string(), gen_255_161_data.to_vec());

    // Table gen_255_163 (186 bytes)
    let gen_255_163_data = include_bytes!("tables/gen_255_163.bin");
    tables.insert("gen_255_163".to_string(), gen_255_163_data.to_vec());

    // Table gen_255_165 (182 bytes)
    let gen_255_165_data = include_bytes!("tables/gen_255_165.bin");
    tables.insert("gen_255_165".to_string(), gen_255_165_data.to_vec());

    // Table gen_255_167 (178 bytes)
    let gen_255_167_data = include_bytes!("tables/gen_255_167.bin");
    tables.insert("gen_255_167".to_string(), gen_255_167_data.to_vec());

    // Table gen_255_169 (174 bytes)
    let gen_255_169_data = include_bytes!("tables/gen_255_169.bin");
    tables.insert("gen_255_169".to_string(), gen_255_169_data.to_vec());

    // Table gen_255_171 (170 bytes)
    let gen_255_171_data = include_bytes!("tables/gen_255_171.bin");
    tables.insert("gen_255_171".to_string(), gen_255_171_data.to_vec());

    // Table gen_255_173 (166 bytes)
    let gen_255_173_data = include_bytes!("tables/gen_255_173.bin");
    tables.insert("gen_255_173".to_string(), gen_255_173_data.to_vec());

    // Table gen_255_175 (162 bytes)
    let gen_255_175_data = include_bytes!("tables/gen_255_175.bin");
    tables.insert("gen_255_175".to_string(), gen_255_175_data.to_vec());

    // Table gen_255_177 (158 bytes)
    let gen_255_177_data = include_bytes!("tables/gen_255_177.bin");
    tables.insert("gen_255_177".to_string(), gen_255_177_data.to_vec());

    // Table gen_255_179 (154 bytes)
    let gen_255_179_data = include_bytes!("tables/gen_255_179.bin");
    tables.insert("gen_255_179".to_string(), gen_255_179_data.to_vec());

    // Table gen_255_181 (150 bytes)
    let gen_255_181_data = include_bytes!("tables/gen_255_181.bin");
    tables.insert("gen_255_181".to_string(), gen_255_181_data.to_vec());

    // Table gen_255_183 (146 bytes)
    let gen_255_183_data = include_bytes!("tables/gen_255_183.bin");
    tables.insert("gen_255_183".to_string(), gen_255_183_data.to_vec());

    // Table gen_255_185 (142 bytes)
    let gen_255_185_data = include_bytes!("tables/gen_255_185.bin");
    tables.insert("gen_255_185".to_string(), gen_255_185_data.to_vec());

    // Table gen_255_187 (138 bytes)
    let gen_255_187_data = include_bytes!("tables/gen_255_187.bin");
    tables.insert("gen_255_187".to_string(), gen_255_187_data.to_vec());

    // Table gen_255_189 (134 bytes)
    let gen_255_189_data = include_bytes!("tables/gen_255_189.bin");
    tables.insert("gen_255_189".to_string(), gen_255_189_data.to_vec());

    // Table gen_255_191 (130 bytes)
    let gen_255_191_data = include_bytes!("tables/gen_255_191.bin");
    tables.insert("gen_255_191".to_string(), gen_255_191_data.to_vec());

    // Table gen_255_193 (126 bytes)
    let gen_255_193_data = include_bytes!("tables/gen_255_193.bin");
    tables.insert("gen_255_193".to_string(), gen_255_193_data.to_vec());

    // Table gen_255_195 (122 bytes)
    let gen_255_195_data = include_bytes!("tables/gen_255_195.bin");
    tables.insert("gen_255_195".to_string(), gen_255_195_data.to_vec());

    // Table gen_255_197 (118 bytes)
    let gen_255_197_data = include_bytes!("tables/gen_255_197.bin");
    tables.insert("gen_255_197".to_string(), gen_255_197_data.to_vec());

    // Table gen_255_199 (114 bytes)
    let gen_255_199_data = include_bytes!("tables/gen_255_199.bin");
    tables.insert("gen_255_199".to_string(), gen_255_199_data.to_vec());

    // Table gen_255_201 (110 bytes)
    let gen_255_201_data = include_bytes!("tables/gen_255_201.bin");
    tables.insert("gen_255_201".to_string(), gen_255_201_data.to_vec());

    // Table gen_255_203 (106 bytes)
    let gen_255_203_data = include_bytes!("tables/gen_255_203.bin");
    tables.insert("gen_255_203".to_string(), gen_255_203_data.to_vec());

    // Table gen_255_205 (102 bytes)
    let gen_255_205_data = include_bytes!("tables/gen_255_205.bin");
    tables.insert("gen_255_205".to_string(), gen_255_205_data.to_vec());

    // Table gen_255_207 (98 bytes)
    let gen_255_207_data: [u8; 98] = [
        0x01, 0x00, 0x7a, 0x00, 0x0c, 0x00, 0x0e, 0x00, 0xda, 0x00, 0xc3, 0x00, 0x49, 0x00, 0xc2, 0x00, 0x9d, 0x00, 0x20, 0x00, 0x11, 0x00, 0x05, 0x00, 0x3e, 0x00, 0x47, 0x00, 0x0f, 0x00, 0x19, 0x00, 0xf0, 0x00, 0xa1, 0x00, 0x15, 0x00, 0xda, 0x00, 0x94, 0x00, 0xb0, 0x00, 0x6d, 0x00, 0xb7, 0x00, 0x95, 0x00, 0xa6, 0x00, 0xf5, 0x00, 0xda, 0x00, 0xfb, 0x00, 0x97, 0x00, 0x96, 0x00, 0xaa, 0x00, 0xc3, 0x00, 0x97, 0x00, 0xa0, 0x00, 0x0c, 0x00, 0x82, 0x00, 0xdb, 0x00, 0x75, 0x00, 0xf4, 0x00, 0x0a, 0x00, 0xa9, 0x00, 0x13, 0x00, 0xcc, 0x00, 0x71, 0x00, 0x51, 0x00, 0xd6, 0x00, 0xe7, 0x00, 0xe4, 0x00
    ];
    tables.insert("gen_255_207".to_string(), gen_255_207_data.to_vec());

    // Table gen_255_209 (94 bytes)
    let gen_255_209_data: [u8; 94] = [
        0x01, 0x00, 0x1f, 0x00, 0xd9, 0x00, 0xa3, 0x00, 0xf8, 0x00, 0x08, 0x00, 0xf4, 0x00, 0xa2, 0x00, 0xc5, 0x00, 0xc8, 0x00, 0xbd, 0x00, 0x11, 0x00, 0x98, 0x00, 0xc2, 0x00, 0xcc, 0x00, 0xa8, 0x00, 0xb9, 0x00, 0x0f, 0x00, 0x4e, 0x00, 0x39, 0x00, 0xcb, 0x00, 0xae, 0x00, 0xf3, 0x00, 0xd2, 0x00, 0x03, 0x00, 0x30, 0x00, 0xec, 0x00, 0x7f, 0x00, 0x13, 0x00, 0x44, 0x00, 0xda, 0x00, 0x74, 0x00, 0x6a, 0x00, 0x0c, 0x00, 0x8f, 0x00, 0x39, 0x00, 0x59, 0x00, 0xe1, 0x00, 0xa1, 0x00, 0xc8, 0x00, 0x3a, 0x00, 0x6b, 0x00, 0xfa, 0x00, 0xe8, 0x00, 0xa1, 0x00, 0xcc, 0x00, 0x6f, 0x00
    ];
    tables.insert("gen_255_209".to_string(), gen_255_209_data.to_vec());

    // Table gen_255_211 (90 bytes)
    let gen_255_211_data: [u8; 90] = [
        0x01, 0x00, 0x41, 0x00, 0x3a, 0x00, 0x5f, 0x00, 0x33, 0x00, 0x1e, 0x00, 0xad, 0x00, 0x1e, 0x00, 0xa1, 0x00, 0xdb, 0x00, 0x07, 0x00, 0x11, 0x00, 0x01, 0x00, 0xdd, 0x00, 0x35, 0x00, 0x7f, 0x00, 0x42, 0x00, 0x06, 0x00, 0x63, 0x00, 0x27, 0x00, 0xcd, 0x00, 0xea, 0x00, 0x20, 0x00, 0xc2, 0x00, 0x44, 0x00, 0xfc, 0x00, 0xfe, 0x00, 0xd8, 0x00, 0x39, 0x00, 0x29, 0x00, 0xa8, 0x00, 0x86, 0x00, 0x64, 0x00, 0xd6, 0x00, 0x3d, 0x00, 0xad, 0x00, 0xc4, 0x00, 0x58, 0x00, 0xa6, 0x00, 0x1e, 0x00, 0xd7, 0x00, 0x39, 0x00, 0xa8, 0x00, 0xf8, 0x00, 0x24, 0x00
    ];
    tables.insert("gen_255_211".to_string(), gen_255_211_data.to_vec());

    // Table gen_255_213 (86 bytes)
    let gen_255_213_data: [u8; 86] = [
        0x01, 0x00, 0xd8, 0x00, 0x1a, 0x00, 0x12, 0x00, 0xfb, 0x00, 0x60, 0x00, 0x8f, 0x00, 0xa8, 0x00, 0x16, 0x00, 0x3a, 0x00, 0x87, 0x00, 0x2f, 0x00, 0x8e, 0x00, 0xfb, 0x00, 0xa7, 0x00, 0x33, 0x00, 0x11, 0x00, 0x83, 0x00, 0x06, 0x00, 0xa6, 0x00, 0x66, 0x00, 0xed, 0x00, 0xe5, 0x00, 0x94, 0x00, 0x72, 0x00, 0xc6, 0x00, 0xb9, 0x00, 0x85, 0x00, 0xd8, 0x00, 0x99, 0x00, 0x5c, 0x00, 0xfa, 0x00, 0xf5, 0x00, 0x26, 0x00, 0x27, 0x00, 0xcb, 0x00, 0x73, 0x00, 0x51, 0x00, 0x1c, 0x00, 0xf3, 0x00, 0xd5, 0x00, 0xa3, 0x00, 0x21, 0x00
    ];
    tables.insert("gen_255_213".to_string(), gen_255_213_data.to_vec());

    // Table gen_255_215 (82 bytes)
    let gen_255_215_data: [u8; 82] = [
        0x01, 0x00, 0xb9, 0x00, 0xc7, 0x00, 0xd3, 0x00, 0x91, 0x00, 0x04, 0x00, 0x0d, 0x00, 0xa9, 0x00, 0xf2, 0x00, 0x9e, 0x00, 0xb3, 0x00, 0x08, 0x00, 0x2f, 0x00, 0xe3, 0x00, 0x5e, 0x00, 0x6c, 0x00, 0xec, 0x00, 0x5e, 0x00, 0xee, 0x00, 0x53, 0x00, 0x32, 0x00, 0x83, 0x00, 0x66, 0x00, 0x19, 0x00, 0xc0, 0x00, 0x1c, 0x00, 0x6f, 0x00, 0x51, 0x00, 0x2a, 0x00, 0xed, 0x00, 0xbc, 0x00, 0x78, 0x00, 0x64, 0x00, 0xb7, 0x00, 0xfc, 0x00, 0x68, 0x00, 0x5d, 0x00, 0x13, 0x00, 0xa3, 0x00, 0x89, 0x00, 0xa0, 0x00
    ];
    tables.insert("gen_255_215".to_string(), gen_255_215_data.to_vec());

    // Table gen_255_217 (78 bytes)
    let gen_255_217_data: [u8; 78] = [
        0x01, 0x00, 0xe6, 0x00, 0x25, 0x00, 0xd4, 0x00, 0xf7, 0x00, 0xeb, 0x00, 0xbe, 0x00, 0x6c, 0x00, 0x88, 0x00, 0x69, 0x00, 0x3d, 0x00, 0xdc, 0x00, 0xe3, 0x00, 0x27, 0x00, 0xf0, 0x00, 0xb9, 0x00, 0xcc, 0x00, 0x5d, 0x00, 0x86, 0x00, 0x99, 0x00, 0x21, 0x00, 0xda, 0x00, 0xfa, 0x00, 0xc3, 0x00, 0x5a, 0x00, 0xcd, 0x00, 0x32, 0x00, 0xfa, 0x00, 0x2f, 0x00, 0x19, 0x00, 0xea, 0x00, 0x51, 0x00, 0xde, 0x00, 0x4c, 0x00, 0x14, 0x00, 0x72, 0x00, 0x57, 0x00, 0xaf, 0x00, 0xf5, 0x00
    ];
    tables.insert("gen_255_217".to_string(), gen_255_217_data.to_vec());

    // Table gen_255_219 (74 bytes)
    let gen_255_219_data: [u8; 74] = [
        0x01, 0x00, 0x38, 0x00, 0x37, 0x00, 0x22, 0x00, 0xb4, 0x00, 0xdb, 0x00, 0x4a, 0x00, 0x47, 0x00, 0xb0, 0x00, 0x2f, 0x00, 0xbf, 0x00, 0x66, 0x00, 0xcd, 0x00, 0x96, 0x00, 0x3f, 0x00, 0x85, 0x00, 0x3a, 0x00, 0x01, 0x00, 0x33, 0x00, 0x4a, 0x00, 0xbb, 0x00, 0x16, 0x00, 0xd2, 0x00, 0x67, 0x00, 0xfb, 0x00, 0x2e, 0x00, 0xe0, 0x00, 0x29, 0x00, 0x44, 0x00, 0x55, 0x00, 0x48, 0x00, 0x52, 0x00, 0x18, 0x00, 0x9a, 0x00, 0xcd, 0x00, 0xbe, 0x00, 0xe4, 0x00
    ];
    tables.insert("gen_255_219".to_string(), gen_255_219_data.to_vec());

    // Table gen_255_221 (70 bytes)
    let gen_255_221_data: [u8; 70] = [
        0x01, 0x00, 0x81, 0x00, 0xf0, 0x00, 0xa4, 0x00, 0x43, 0x00, 0xc0, 0x00, 0x0c, 0x00, 0x7c, 0x00, 0x0c, 0x00, 0x3e, 0x00, 0x0d, 0x00, 0x97, 0x00, 0xa7, 0x00, 0x86, 0x00, 0x39, 0x00, 0xab, 0x00, 0x15, 0x00, 0x0f, 0x00, 0xe3, 0x00, 0x1b, 0x00, 0x10, 0x00, 0x16, 0x00, 0x33, 0x00, 0xf0, 0x00, 0x71, 0x00, 0x42, 0x00, 0x7f, 0x00, 0x59, 0x00, 0xd5, 0x00, 0xc8, 0x00, 0x77, 0x00, 0x17, 0x00, 0x71, 0x00, 0xbf, 0x00, 0xd6, 0x00
    ];
    tables.insert("gen_255_221".to_string(), gen_255_221_data.to_vec());

    // Table gen_255_223 (66 bytes)
    let gen_255_223_data: [u8; 66] = [
        0x01, 0x00, 0xe8, 0x00, 0x1d, 0x00, 0xbd, 0x00, 0x32, 0x00, 0x8e, 0x00, 0xf6, 0x00, 0xe8, 0x00, 0x0f, 0x00, 0x2b, 0x00, 0x52, 0x00, 0xa4, 0x00, 0xee, 0x00, 0x01, 0x00, 0x9e, 0x00, 0x0d, 0x00, 0x77, 0x00, 0x9e, 0x00, 0xe0, 0x00, 0x86, 0x00, 0xe3, 0x00, 0xd2, 0x00, 0xa3, 0x00, 0x32, 0x00, 0x6b, 0x00, 0x28, 0x00, 0x1b, 0x00, 0x68, 0x00, 0xfd, 0x00, 0x18, 0x00, 0xef, 0x00, 0xd8, 0x00, 0x2d, 0x00
    ];
    tables.insert("gen_255_223".to_string(), gen_255_223_data.to_vec());

    // Table gen_255_225 (62 bytes)
    let gen_255_225_data: [u8; 62] = [
        0x01, 0x00, 0xb5, 0x00, 0xff, 0x00, 0x52, 0x00, 0xe4, 0x00, 0x45, 0x00, 0x4a, 0x00, 0x6e, 0x00, 0xae, 0x00, 0xd2, 0x00, 0x69, 0x00, 0x76, 0x00, 0x43, 0x00, 0xad, 0x00, 0x67, 0x00, 0x8b, 0x00, 0x15, 0x00, 0xd2, 0x00, 0x41, 0x00, 0xe9, 0x00, 0xf2, 0x00, 0xe9, 0x00, 0x49, 0x00, 0x4b, 0x00, 0x6f, 0x00, 0x75, 0x00, 0xb0, 0x00, 0x74, 0x00, 0x99, 0x00, 0x45, 0x00, 0x59, 0x00
    ];
    tables.insert("gen_255_225".to_string(), gen_255_225_data.to_vec());

    // Table gen_255_227 (58 bytes)
    let gen_255_227_data: [u8; 58] = [
        0x01, 0x00, 0xe5, 0x00, 0x24, 0x00, 0xe0, 0x00, 0xd0, 0x00, 0x7a, 0x00, 0x2c, 0x00, 0x7c, 0x00, 0xa5, 0x00, 0x93, 0x00, 0x1c, 0x00, 0x53, 0x00, 0x73, 0x00, 0x2b, 0x00, 0xd4, 0x00, 0x83, 0x00, 0x9b, 0x00, 0x94, 0x00, 0x6f, 0x00, 0x3a, 0x00, 0x68, 0x00, 0xa1, 0x00, 0x9b, 0x00, 0xeb, 0x00, 0x54, 0x00, 0xcd, 0x00, 0xa1, 0x00, 0x25, 0x00, 0xaa, 0x00
    ];
    tables.insert("gen_255_227".to_string(), gen_255_227_data.to_vec());

    // Table gen_255_229 (54 bytes)
    let gen_255_229_data: [u8; 54] = [
        0x01, 0x00, 0xf1, 0x00, 0xcc, 0x00, 0xd1, 0x00, 0x40, 0x00, 0xd0, 0x00, 0xa5, 0x00, 0x33, 0x00, 0x03, 0x00, 0x39, 0x00, 0xb2, 0x00, 0xec, 0x00, 0x6a, 0x00, 0xab, 0x00, 0xc2, 0x00, 0xe3, 0x00, 0x4a, 0x00, 0x80, 0x00, 0xe6, 0x00, 0x9d, 0x00, 0xec, 0x00, 0x2f, 0x00, 0x36, 0x00, 0xe3, 0x00, 0xe5, 0x00, 0x7d, 0x00, 0xd9, 0x00
    ];
    tables.insert("gen_255_229".to_string(), gen_255_229_data.to_vec());

    // Table gen_255_231 (50 bytes)
    let gen_255_231_data: [u8; 50] = [
        0x01, 0x00, 0xf4, 0x00, 0xc5, 0x00, 0x21, 0x00, 0x14, 0x00, 0xc3, 0x00, 0xc5, 0x00, 0x08, 0x00, 0xda, 0x00, 0xfc, 0x00, 0xae, 0x00, 0x96, 0x00, 0xc6, 0x00, 0xa7, 0x00, 0x2c, 0x00, 0x7d, 0x00, 0xfb, 0x00, 0x85, 0x00, 0x2d, 0x00, 0x4f, 0x00, 0xad, 0x00, 0xd0, 0x00, 0xc7, 0x00, 0x6c, 0x00, 0xc1, 0x00
    ];
    tables.insert("gen_255_231".to_string(), gen_255_231_data.to_vec());

    // Table gen_255_233 (46 bytes)
    let gen_255_233_data: [u8; 46] = [
        0x01, 0x00, 0xb2, 0x00, 0xf6, 0x00, 0x6c, 0x00, 0xcf, 0x00, 0x43, 0x00, 0xcb, 0x00, 0x75, 0x00, 0xed, 0x00, 0xf4, 0x00, 0xa1, 0x00, 0xb2, 0x00, 0xb1, 0x00, 0x75, 0x00, 0x6e, 0x00, 0x1f, 0x00, 0xd9, 0x00, 0xcb, 0x00, 0x49, 0x00, 0x4b, 0x00, 0x33, 0x00, 0x6e, 0x00, 0x47, 0x00
    ];
    tables.insert("gen_255_233".to_string(), gen_255_233_data.to_vec());

    // Table gen_255_235 (42 bytes)
    let gen_255_235_data: [u8; 42] = [
        0x01, 0x00, 0x2d, 0x00, 0xde, 0x00, 0xd3, 0x00, 0x50, 0x00, 0x61, 0x00, 0xe5, 0x00, 0x27, 0x00, 0x64, 0x00, 0xb2, 0x00, 0xae, 0x00, 0xf7, 0x00, 0x8b, 0x00, 0xd9, 0x00, 0x47, 0x00, 0xb3, 0x00, 0x96, 0x00, 0x7a, 0x00, 0xf4, 0x00, 0xa6, 0x00, 0x59, 0x00
    ];
    tables.insert("gen_255_235".to_string(), gen_255_235_data.to_vec());

    // Table gen_255_237 (38 bytes)
    let gen_255_237_data: [u8; 38] = [
        0x01, 0x00, 0xc3, 0x00, 0xcb, 0x00, 0xd1, 0x00, 0x43, 0x00, 0x57, 0x00, 0x88, 0x00, 0x33, 0x00, 0xab, 0x00, 0xfe, 0x00, 0x8d, 0x00, 0x63, 0x00, 0xe6, 0x00, 0x74, 0x00, 0x19, 0x00, 0xb4, 0x00, 0x3e, 0x00, 0x1f, 0x00, 0xb3, 0x00
    ];
    tables.insert("gen_255_237".to_string(), gen_255_237_data.to_vec());

    // Table gen_255_239 (34 bytes)
    let gen_255_239_data: [u8; 34] = [
        0x01, 0x00, 0x76, 0x00, 0x34, 0x00, 0x67, 0x00, 0x1f, 0x00, 0x68, 0x00, 0x7e, 0x00, 0xbb, 0x00, 0xe8, 0x00, 0x11, 0x00, 0x38, 0x00, 0xb7, 0x00, 0x31, 0x00, 0x64, 0x00, 0x51, 0x00, 0x2c, 0x00, 0x4f, 0x00
    ];
    tables.insert("gen_255_239".to_string(), gen_255_239_data.to_vec());

    // Table gen_255_241 (30 bytes)
    let gen_255_241_data: [u8; 30] = [
        0x01, 0x00, 0x1c, 0x00, 0xd8, 0x00, 0xb7, 0x00, 0x14, 0x00, 0x64, 0x00, 0x2e, 0x00, 0x24, 0x00, 0x4d, 0x00, 0x24, 0x00, 0xaf, 0x00, 0x2b, 0x00, 0xbc, 0x00, 0x9c, 0x00, 0x1a, 0x00
    ];
    tables.insert("gen_255_241".to_string(), gen_255_241_data.to_vec());

    // Table gen_255_243 (26 bytes)
    let gen_255_243_data: [u8; 26] = [
        0x01, 0x00, 0x88, 0x00, 0xc1, 0x00, 0x22, 0x00, 0x33, 0x00, 0x82, 0x00, 0x93, 0x00, 0xa7, 0x00, 0xaa, 0x00, 0x84, 0x00, 0xaf, 0x00, 0xfc, 0x00, 0x78, 0x00
    ];
    tables.insert("gen_255_243".to_string(), gen_255_243_data.to_vec());

    // Table gen_255_245 (22 bytes)
    let gen_255_245_data: [u8; 22] = [
        0x01, 0x00, 0xad, 0x00, 0x2f, 0x00, 0x8c, 0x00, 0xbe, 0x00, 0xc5, 0x00, 0x1e, 0x00, 0xbc, 0x00, 0x44, 0x00, 0xd4, 0x00, 0xa0, 0x00
    ];
    tables.insert("gen_255_245".to_string(), gen_255_245_data.to_vec());

    // Table gen_255_247 (18 bytes)
    let gen_255_247_data: [u8; 18] = [
        0x01, 0x00, 0xe3, 0x00, 0x2c, 0x00, 0xb2, 0x00, 0x47, 0x00, 0xac, 0x00, 0x08, 0x00, 0xe0, 0x00, 0x25, 0x00
    ];
    tables.insert("gen_255_247".to_string(), gen_255_247_data.to_vec());

    // Table gen_255_249 (14 bytes)
    let gen_255_249_data: [u8; 14] = [
        0x01, 0x00, 0x7e, 0x00, 0x04, 0x00, 0x9e, 0x00, 0x3a, 0x00, 0x31, 0x00, 0x75, 0x00
    ];
    tables.insert("gen_255_249".to_string(), gen_255_249_data.to_vec());

    // Table gen_255_251 (10 bytes)
    let gen_255_251_data: [u8; 10] = [
        0x01, 0x00, 0x1e, 0x00, 0xd8, 0x00, 0xe7, 0x00, 0x74, 0x00
    ];
    tables.insert("gen_255_251".to_string(), gen_255_251_data.to_vec());

    // Table gen_255_253 (6 bytes)
    let gen_255_253_data: [u8; 6] = [
        0x01, 0x00, 0x06, 0x00, 0x08, 0x00
    ];
    tables.insert("gen_255_253".to_string(), gen_255_253_data.to_vec());

    // Table syn_7_2 (37002 bytes)
    let syn_7_2_data = include_bytes!("tables/syn_7_2.bin");
    tables.insert("syn_7_2".to_string(), syn_7_2_data.to_vec());

    // Table syn_7_4 (53340 bytes)
    let syn_7_4_data = include_bytes!("tables/syn_7_4.bin");
    tables.insert("syn_7_4".to_string(), syn_7_4_data.to_vec());

    // Table syn_7_6 (69678 bytes)
    let syn_7_6_data = include_bytes!("tables/syn_7_6.bin");
    tables.insert("syn_7_6".to_string(), syn_7_6_data.to_vec());

    // Table syn_15_2 (80565 bytes)
    let syn_15_2_data = include_bytes!("tables/syn_15_2.bin");
    tables.insert("syn_15_2".to_string(), syn_15_2_data.to_vec());

    // Table syn_15_4 (115575 bytes)
    let syn_15_4_data = include_bytes!("tables/syn_15_4.bin");
    tables.insert("syn_15_4".to_string(), syn_15_4_data.to_vec());

    // Table syn_15_6 (150585 bytes)
    let syn_15_6_data = include_bytes!("tables/syn_15_6.bin");
    tables.insert("syn_15_6".to_string(), syn_15_6_data.to_vec());

    // Table syn_15_8 (185595 bytes)
    let syn_15_8_data = include_bytes!("tables/syn_15_8.bin");
    tables.insert("syn_15_8".to_string(), syn_15_8_data.to_vec());

    // Table syn_31_2 (169221 bytes)
    let syn_31_2_data = include_bytes!("tables/syn_31_2.bin");
    tables.insert("syn_31_2".to_string(), syn_31_2_data.to_vec());

    // Table syn_31_4 (241575 bytes)
    let syn_31_4_data = include_bytes!("tables/syn_31_4.bin");
    tables.insert("syn_31_4".to_string(), syn_31_4_data.to_vec());

    // Table syn_31_6 (313929 bytes)
    let syn_31_6_data = include_bytes!("tables/syn_31_6.bin");
    tables.insert("syn_31_6".to_string(), syn_31_6_data.to_vec());

    // Table syn_31_8 (386283 bytes)
    let syn_31_8_data = include_bytes!("tables/syn_31_8.bin");
    tables.insert("syn_31_8".to_string(), syn_31_8_data.to_vec());

    // Table gen_7_4_1 (18 bytes)
    let gen_7_4_1_data: [u8; 18] = [
        0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00
    ];
    tables.insert("gen_7_4_1".to_string(), gen_7_4_1_data.to_vec());

    // Table gen_7_1_2 (34 bytes)
    let gen_7_1_2_data: [u8; 34] = [
        0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00
    ];
    tables.insert("gen_7_1_2".to_string(), gen_7_1_2_data.to_vec());

    // Table gen_7_1_3 (50 bytes)
    let gen_7_1_3_data: [u8; 50] = [
        0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00
    ];
    tables.insert("gen_7_1_3".to_string(), gen_7_1_3_data.to_vec());

    // Table gen_7_1_4 (66 bytes)
    let gen_7_1_4_data: [u8; 66] = [
        0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00
    ];
    tables.insert("gen_7_1_4".to_string(), gen_7_1_4_data.to_vec());

    // Table gen_15_11_1 (18 bytes)
    let gen_15_11_1_data: [u8; 18] = [
        0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00
    ];
    tables.insert("gen_15_11_1".to_string(), gen_15_11_1_data.to_vec());

    // Table gen_15_7_2 (34 bytes)
    let gen_15_7_2_data: [u8; 34] = [
        0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00
    ];
    tables.insert("gen_15_7_2".to_string(), gen_15_7_2_data.to_vec());

    // Table gen_15_3_3 (50 bytes)
    let gen_15_3_3_data: [u8; 50] = [
        0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00
    ];
    tables.insert("gen_15_3_3".to_string(), gen_15_3_3_data.to_vec());

    // Table gen_15_1_4 (66 bytes)
    let gen_15_1_4_data: [u8; 66] = [
        0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00
    ];
    tables.insert("gen_15_1_4".to_string(), gen_15_1_4_data.to_vec());

    // Table gen_31_26_1 (18 bytes)
    let gen_31_26_1_data: [u8; 18] = [
        0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00
    ];
    tables.insert("gen_31_26_1".to_string(), gen_31_26_1_data.to_vec());

    // Table gen_31_21_2 (34 bytes)
    let gen_31_21_2_data: [u8; 34] = [
        0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00
    ];
    tables.insert("gen_31_21_2".to_string(), gen_31_21_2_data.to_vec());

    // Table gen_31_16_3 (50 bytes)
    let gen_31_16_3_data: [u8; 50] = [
        0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00
    ];
    tables.insert("gen_31_16_3".to_string(), gen_31_16_3_data.to_vec());

    // Table gen_31_11_4 (66 bytes)
    let gen_31_11_4_data: [u8; 66] = [
        0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00
    ];
    tables.insert("gen_31_11_4".to_string(), gen_31_11_4_data.to_vec());

    // Table gen_63_57_1 (18 bytes)
    let gen_63_57_1_data: [u8; 18] = [
        0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00
    ];
    tables.insert("gen_63_57_1".to_string(), gen_63_57_1_data.to_vec());

    // Table gen_63_51_2 (34 bytes)
    let gen_63_51_2_data: [u8; 34] = [
        0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00
    ];
    tables.insert("gen_63_51_2".to_string(), gen_63_51_2_data.to_vec());

    // Table gen_63_45_3 (50 bytes)
    let gen_63_45_3_data: [u8; 50] = [
        0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00
    ];
    tables.insert("gen_63_45_3".to_string(), gen_63_45_3_data.to_vec());

    // Table gen_63_39_4 (66 bytes)
    let gen_63_39_4_data: [u8; 66] = [
        0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00
    ];
    tables.insert("gen_63_39_4".to_string(), gen_63_39_4_data.to_vec());

    // Table gen_127_120_1 (18 bytes)
    let gen_127_120_1_data: [u8; 18] = [
        0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00
    ];
    tables.insert("gen_127_120_1".to_string(), gen_127_120_1_data.to_vec());

    // Table gen_127_113_2 (34 bytes)
    let gen_127_113_2_data: [u8; 34] = [
        0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00
    ];
    tables.insert("gen_127_113_2".to_string(), gen_127_113_2_data.to_vec());

    // Table gen_127_106_3 (50 bytes)
    let gen_127_106_3_data: [u8; 50] = [
        0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00
    ];
    tables.insert("gen_127_106_3".to_string(), gen_127_106_3_data.to_vec());

    // Table gen_127_99_4 (66 bytes)
    let gen_127_99_4_data: [u8; 66] = [
        0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00
    ];
    tables.insert("gen_127_99_4".to_string(), gen_127_99_4_data.to_vec());

    // Table gen_255_247_1 (18 bytes)
    let gen_255_247_1_data: [u8; 18] = [
        0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00
    ];
    tables.insert("gen_255_247_1".to_string(), gen_255_247_1_data.to_vec());

    // Table gen_255_239_2 (34 bytes)
    let gen_255_239_2_data: [u8; 34] = [
        0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00
    ];
    tables.insert("gen_255_239_2".to_string(), gen_255_239_2_data.to_vec());

    // Table gen_255_231_3 (50 bytes)
    let gen_255_231_3_data: [u8; 50] = [
        0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00
    ];
    tables.insert("gen_255_231_3".to_string(), gen_255_231_3_data.to_vec());

    // Table gen_255_223_4 (66 bytes)
    let gen_255_223_4_data: [u8; 66] = [
        0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00
    ];
    tables.insert("gen_255_223_4".to_string(), gen_255_223_4_data.to_vec());

    // Table min_poly_3 (150 bytes)
    let min_poly_3_data = include_bytes!("tables/min_poly_3.bin");
    tables.insert("min_poly_3".to_string(), min_poly_3_data.to_vec());

    // Table min_poly_4 (406 bytes)
    let min_poly_4_data = include_bytes!("tables/min_poly_4.bin");
    tables.insert("min_poly_4".to_string(), min_poly_4_data.to_vec());

    // Table min_poly_5 (947 bytes)
    let min_poly_5_data = include_bytes!("tables/min_poly_5.bin");
    tables.insert("min_poly_5".to_string(), min_poly_5_data.to_vec());

    // Table min_poly_8 (4148 bytes)
    let min_poly_8_data = include_bytes!("tables/min_poly_8.bin");
    tables.insert("min_poly_8".to_string(), min_poly_8_data.to_vec());

    // Table parity_check_7_4 (21 bytes)
    let parity_check_7_4_data: [u8; 21] = [
        0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01
    ];
    tables.insert("parity_check_7_4".to_string(), parity_check_7_4_data.to_vec());

    // Table syndrome_7_4 (42 bytes)
    let syndrome_7_4_data: [u8; 42] = [
        0x7b, 0x31, 0x3a, 0x20, 0x30, 0x2c, 0x20, 0x32, 0x3a, 0x20, 0x31, 0x2c, 0x20, 0x33, 0x3a, 0x20, 0x32, 0x2c, 0x20, 0x34, 0x3a, 0x20, 0x33, 0x2c, 0x20, 0x35, 0x3a, 0x20, 0x34, 0x2c, 0x20, 0x36, 0x3a, 0x20, 0x35, 0x2c, 0x20, 0x37, 0x3a, 0x20, 0x36, 0x7d
    ];
    tables.insert("syndrome_7_4".to_string(), syndrome_7_4_data.to_vec());

    // Table parity_check_15_11 (60 bytes)
    let parity_check_15_11_data: [u8; 60] = [
        0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01
    ];
    tables.insert("parity_check_15_11".to_string(), parity_check_15_11_data.to_vec());

    // Table syndrome_15_11 (101 bytes)
    let syndrome_15_11_data = include_bytes!("tables/syndrome_15_11.bin");
    tables.insert("syndrome_15_11".to_string(), syndrome_15_11_data.to_vec());

    // Table parity_check_31_26 (155 bytes)
    let parity_check_31_26_data = include_bytes!("tables/parity_check_31_26.bin");
    tables.insert("parity_check_31_26".to_string(), parity_check_31_26_data.to_vec());

    // Table syndrome_31_26 (229 bytes)
    let syndrome_31_26_data = include_bytes!("tables/syndrome_31_26.bin");
    tables.insert("syndrome_31_26".to_string(), syndrome_31_26_data.to_vec());

    // Table parity_check_63_57 (378 bytes)
    let parity_check_63_57_data = include_bytes!("tables/parity_check_63_57.bin");
    tables.insert("parity_check_63_57".to_string(), parity_check_63_57_data.to_vec());

    // Table syndrome_63_57 (485 bytes)
    let syndrome_63_57_data = include_bytes!("tables/syndrome_63_57.bin");
    tables.insert("syndrome_63_57".to_string(), syndrome_63_57_data.to_vec());

    // Table parity_check_127_120 (889 bytes)
    let parity_check_127_120_data = include_bytes!("tables/parity_check_127_120.bin");
    tables.insert("parity_check_127_120".to_string(), parity_check_127_120_data.to_vec());

    // Table syndrome_127_120 (1052 bytes)
    let syndrome_127_120_data = include_bytes!("tables/syndrome_127_120.bin");
    tables.insert("syndrome_127_120".to_string(), syndrome_127_120_data.to_vec());

    // Table parity_check_255_247 (2040 bytes)
    let parity_check_255_247_data = include_bytes!("tables/parity_check_255_247.bin");
    tables.insert("parity_check_255_247".to_string(), parity_check_255_247_data.to_vec());

    // Table syndrome_255_247 (2332 bytes)
    let syndrome_255_247_data = include_bytes!("tables/syndrome_255_247.bin");
    tables.insert("syndrome_255_247".to_string(), syndrome_255_247_data.to_vec());

    // Table gen_1_3 (32 bytes)
    let gen_1_3_data: [u8; 32] = [
        0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    ];
    tables.insert("gen_1_3".to_string(), gen_1_3_data.to_vec());

    // Table gen_1_4 (80 bytes)
    let gen_1_4_data: [u8; 80] = [
        0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00
    ];
    tables.insert("gen_1_4".to_string(), gen_1_4_data.to_vec());

    // Table gen_1_5 (192 bytes)
    let gen_1_5_data = include_bytes!("tables/gen_1_5.bin");
    tables.insert("gen_1_5".to_string(), gen_1_5_data.to_vec());

    // Table gen_2_3 (56 bytes)
    let gen_2_3_data: [u8; 56] = [
        0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00
    ];
    tables.insert("gen_2_3".to_string(), gen_2_3_data.to_vec());

    // Table gen_2_4 (176 bytes)
    let gen_2_4_data = include_bytes!("tables/gen_2_4.bin");
    tables.insert("gen_2_4".to_string(), gen_2_4_data.to_vec());

    // Table gen_2_5 (512 bytes)
    let gen_2_5_data = include_bytes!("tables/gen_2_5.bin");
    tables.insert("gen_2_5".to_string(), gen_2_5_data.to_vec());

    // Table gen_3_4 (240 bytes)
    let gen_3_4_data = include_bytes!("tables/gen_3_4.bin");
    tables.insert("gen_3_4".to_string(), gen_3_4_data.to_vec());

    // Table gen_3_5 (832 bytes)
    let gen_3_5_data = include_bytes!("tables/gen_3_5.bin");
    tables.insert("gen_3_5".to_string(), gen_3_5_data.to_vec());

    // Table interleaver_100 (400 bytes)
    let interleaver_100_data = include_bytes!("tables/interleaver_100.bin");
    tables.insert("interleaver_100".to_string(), interleaver_100_data.to_vec());

    // Table interleaver_200 (800 bytes)
    let interleaver_200_data = include_bytes!("tables/interleaver_200.bin");
    tables.insert("interleaver_200".to_string(), interleaver_200_data.to_vec());

    // Table interleaver_500 (2000 bytes)
    let interleaver_500_data = include_bytes!("tables/interleaver_500.bin");
    tables.insert("interleaver_500".to_string(), interleaver_500_data.to_vec());

    // Table interleaver_1000 (4000 bytes)
    let interleaver_1000_data = include_bytes!("tables/interleaver_1000.bin");
    tables.insert("interleaver_1000".to_string(), interleaver_1000_data.to_vec());

    // Table trellis_3_1_2 (32 bytes)
    let trellis_3_1_2_data: [u8; 32] = [
        0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x03, 0x00, 0x02, 0x00, 0x03, 0x00, 0x03, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x03, 0x00, 0x00, 0x00
    ];
    tables.insert("trellis_3_1_2".to_string(), trellis_3_1_2_data.to_vec());

    // Table trellis_3_1_3 (32 bytes)
    let trellis_3_1_3_data: [u8; 32] = [
        0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x07, 0x00, 0x02, 0x00, 0x03, 0x00, 0x03, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x05, 0x00, 0x02, 0x00, 0x01, 0x00, 0x03, 0x00, 0x00, 0x00
    ];
    tables.insert("trellis_3_1_3".to_string(), trellis_3_1_3_data.to_vec());

    // Table trellis_3_2_3 (32 bytes)
    let trellis_3_2_3_data: [u8; 32] = [
        0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x07, 0x00, 0x02, 0x00, 0x03, 0x00, 0x03, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x05, 0x00, 0x02, 0x00, 0x01, 0x00, 0x03, 0x00, 0x00, 0x00
    ];
    tables.insert("trellis_3_2_3".to_string(), trellis_3_2_3_data.to_vec());

    // Table trellis_5_1_2 (128 bytes)
    let trellis_5_1_2_data = include_bytes!("tables/trellis_5_1_2.bin");
    tables.insert("trellis_5_1_2".to_string(), trellis_5_1_2_data.to_vec());

    // Table trellis_5_1_3 (128 bytes)
    let trellis_5_1_3_data = include_bytes!("tables/trellis_5_1_3.bin");
    tables.insert("trellis_5_1_3".to_string(), trellis_5_1_3_data.to_vec());

    // Table trellis_5_2_3 (128 bytes)
    let trellis_5_2_3_data = include_bytes!("tables/trellis_5_2_3.bin");
    tables.insert("trellis_5_2_3".to_string(), trellis_5_2_3_data.to_vec());

    // Table trellis_7_1_2 (512 bytes)
    let trellis_7_1_2_data = include_bytes!("tables/trellis_7_1_2.bin");
    tables.insert("trellis_7_1_2".to_string(), trellis_7_1_2_data.to_vec());

    // Table trellis_7_1_3 (512 bytes)
    let trellis_7_1_3_data = include_bytes!("tables/trellis_7_1_3.bin");
    tables.insert("trellis_7_1_3".to_string(), trellis_7_1_3_data.to_vec());

    // Table trellis_7_2_3 (512 bytes)
    let trellis_7_2_3_data = include_bytes!("tables/trellis_7_2_3.bin");
    tables.insert("trellis_7_2_3".to_string(), trellis_7_2_3_data.to_vec());

    // Table trellis_9_1_2 (2048 bytes)
    let trellis_9_1_2_data = include_bytes!("tables/trellis_9_1_2.bin");
    tables.insert("trellis_9_1_2".to_string(), trellis_9_1_2_data.to_vec());

    // Table trellis_9_1_3 (2048 bytes)
    let trellis_9_1_3_data = include_bytes!("tables/trellis_9_1_3.bin");
    tables.insert("trellis_9_1_3".to_string(), trellis_9_1_3_data.to_vec());

    // Table trellis_9_2_3 (2048 bytes)
    let trellis_9_2_3_data = include_bytes!("tables/trellis_9_2_3.bin");
    tables.insert("trellis_9_2_3".to_string(), trellis_9_2_3_data.to_vec());

    // Table degree_robust_soliton (80008 bytes)
    let degree_robust_soliton_data = include_bytes!("tables/degree_robust_soliton.bin");
    tables.insert("degree_robust_soliton".to_string(), degree_robust_soliton_data.to_vec());

    // Table degree_ideal_soliton (80008 bytes)
    let degree_ideal_soliton_data = include_bytes!("tables/degree_ideal_soliton.bin");
    tables.insert("degree_ideal_soliton".to_string(), degree_ideal_soliton_data.to_vec());

    // Table parity_check_100_50 (5000 bytes)
    let parity_check_100_50_data = include_bytes!("tables/parity_check_100_50.bin");
    tables.insert("parity_check_100_50".to_string(), parity_check_100_50_data.to_vec());

    // Table parity_check_200_100 (20000 bytes)
    let parity_check_200_100_data = include_bytes!("tables/parity_check_200_100.bin");
    tables.insert("parity_check_200_100".to_string(), parity_check_200_100_data.to_vec());

    // Table parity_check_500_250 (125000 bytes)
    let parity_check_500_250_data = include_bytes!("tables/parity_check_500_250.bin");
    tables.insert("parity_check_500_250".to_string(), parity_check_500_250_data.to_vec());

    // Table parity_check_1000_500 (500000 bytes)
    let parity_check_1000_500_data = include_bytes!("tables/parity_check_1000_500.bin");
    tables.insert("parity_check_1000_500".to_string(), parity_check_1000_500_data.to_vec());

    // Table reliability_32_0 (256 bytes)
    let reliability_32_0_data = include_bytes!("tables/reliability_32_0.bin");
    tables.insert("reliability_32_0".to_string(), reliability_32_0_data.to_vec());

    // Table reliability_32_10 (256 bytes)
    let reliability_32_10_data = include_bytes!("tables/reliability_32_10.bin");
    tables.insert("reliability_32_10".to_string(), reliability_32_10_data.to_vec());

    // Table reliability_32_20 (256 bytes)
    let reliability_32_20_data = include_bytes!("tables/reliability_32_20.bin");
    tables.insert("reliability_32_20".to_string(), reliability_32_20_data.to_vec());

    // Table reliability_32_30 (256 bytes)
    let reliability_32_30_data = include_bytes!("tables/reliability_32_30.bin");
    tables.insert("reliability_32_30".to_string(), reliability_32_30_data.to_vec());

    // Table reliability_64_0 (512 bytes)
    let reliability_64_0_data = include_bytes!("tables/reliability_64_0.bin");
    tables.insert("reliability_64_0".to_string(), reliability_64_0_data.to_vec());

    // Table reliability_64_10 (512 bytes)
    let reliability_64_10_data = include_bytes!("tables/reliability_64_10.bin");
    tables.insert("reliability_64_10".to_string(), reliability_64_10_data.to_vec());

    // Table reliability_64_20 (512 bytes)
    let reliability_64_20_data = include_bytes!("tables/reliability_64_20.bin");
    tables.insert("reliability_64_20".to_string(), reliability_64_20_data.to_vec());

    // Table reliability_64_30 (512 bytes)
    let reliability_64_30_data = include_bytes!("tables/reliability_64_30.bin");
    tables.insert("reliability_64_30".to_string(), reliability_64_30_data.to_vec());

    // Table reliability_128_0 (1024 bytes)
    let reliability_128_0_data = include_bytes!("tables/reliability_128_0.bin");
    tables.insert("reliability_128_0".to_string(), reliability_128_0_data.to_vec());

    // Table reliability_128_10 (1024 bytes)
    let reliability_128_10_data = include_bytes!("tables/reliability_128_10.bin");
    tables.insert("reliability_128_10".to_string(), reliability_128_10_data.to_vec());

    // Table reliability_128_20 (1024 bytes)
    let reliability_128_20_data = include_bytes!("tables/reliability_128_20.bin");
    tables.insert("reliability_128_20".to_string(), reliability_128_20_data.to_vec());

    // Table reliability_128_30 (1024 bytes)
    let reliability_128_30_data = include_bytes!("tables/reliability_128_30.bin");
    tables.insert("reliability_128_30".to_string(), reliability_128_30_data.to_vec());

    // Table reliability_256_0 (2048 bytes)
    let reliability_256_0_data = include_bytes!("tables/reliability_256_0.bin");
    tables.insert("reliability_256_0".to_string(), reliability_256_0_data.to_vec());

    // Table reliability_256_10 (2048 bytes)
    let reliability_256_10_data = include_bytes!("tables/reliability_256_10.bin");
    tables.insert("reliability_256_10".to_string(), reliability_256_10_data.to_vec());

    // Table reliability_256_20 (2048 bytes)
    let reliability_256_20_data = include_bytes!("tables/reliability_256_20.bin");
    tables.insert("reliability_256_20".to_string(), reliability_256_20_data.to_vec());

    // Table reliability_256_30 (2048 bytes)
    let reliability_256_30_data = include_bytes!("tables/reliability_256_30.bin");
    tables.insert("reliability_256_30".to_string(), reliability_256_30_data.to_vec());

    // Table reliability_512_0 (4096 bytes)
    let reliability_512_0_data = include_bytes!("tables/reliability_512_0.bin");
    tables.insert("reliability_512_0".to_string(), reliability_512_0_data.to_vec());

    // Table reliability_512_10 (4096 bytes)
    let reliability_512_10_data = include_bytes!("tables/reliability_512_10.bin");
    tables.insert("reliability_512_10".to_string(), reliability_512_10_data.to_vec());

    // Table reliability_512_20 (4096 bytes)
    let reliability_512_20_data = include_bytes!("tables/reliability_512_20.bin");
    tables.insert("reliability_512_20".to_string(), reliability_512_20_data.to_vec());

    // Table reliability_512_30 (4096 bytes)
    let reliability_512_30_data = include_bytes!("tables/reliability_512_30.bin");
    tables.insert("reliability_512_30".to_string(), reliability_512_30_data.to_vec());

    // Table reliability_1024_0 (8192 bytes)
    let reliability_1024_0_data = include_bytes!("tables/reliability_1024_0.bin");
    tables.insert("reliability_1024_0".to_string(), reliability_1024_0_data.to_vec());

    // Table reliability_1024_10 (8192 bytes)
    let reliability_1024_10_data = include_bytes!("tables/reliability_1024_10.bin");
    tables.insert("reliability_1024_10".to_string(), reliability_1024_10_data.to_vec());

    // Table reliability_1024_20 (8192 bytes)
    let reliability_1024_20_data = include_bytes!("tables/reliability_1024_20.bin");
    tables.insert("reliability_1024_20".to_string(), reliability_1024_20_data.to_vec());

    // Table reliability_1024_30 (8192 bytes)
    let reliability_1024_30_data = include_bytes!("tables/reliability_1024_30.bin");
    tables.insert("reliability_1024_30".to_string(), reliability_1024_30_data.to_vec());
}